1
00:00:00,000 --> 00:00:25,000
And if we can get started whenever you're ready, I'll do an introduction before you

2
00:00:25,000 --> 00:00:26,000
go with your slides.

3
00:00:27,000 --> 00:00:28,000
Okay.

4
00:00:32,000 --> 00:00:35,000
Yeah, I'm sort of trying to just get one thing in here.

5
00:00:35,000 --> 00:00:36,000
That'd be nice to have.

6
00:00:36,000 --> 00:00:41,000
Yeah, I guess.

7
00:00:50,000 --> 00:00:56,000
I already have the PDF form up so you guys can look at that.

8
00:00:57,000 --> 00:00:59,000
And put that in a...

9
00:00:59,000 --> 00:01:05,000
Let's see what we know.

10
00:01:05,000 --> 00:01:08,000
How's it going to use the slides here?

11
00:01:14,000 --> 00:01:15,000
Huh.

12
00:01:16,000 --> 00:01:18,000
Ah, the mystery slide.

13
00:01:18,000 --> 00:01:20,000
Let's zoom in here.

14
00:01:20,000 --> 00:01:21,000
Let's see.

15
00:01:26,000 --> 00:01:27,000
Hmm.

16
00:01:29,000 --> 00:01:30,000
Ah.

17
00:01:30,000 --> 00:01:32,000
Okay, hold on.

18
00:01:43,000 --> 00:01:45,000
Yeah, one more minute.

19
00:01:47,000 --> 00:01:49,000
Ah, I just have to email it.

20
00:01:49,000 --> 00:01:54,000
I figured out everything in the world, like when you have this sort of minimized zoom,

21
00:01:54,000 --> 00:01:57,000
how to actually email it.

22
00:01:57,000 --> 00:02:03,000
If you want to email it to the class post.

23
00:02:11,000 --> 00:02:14,000
I saw that Patrick joined as well.

24
00:02:21,000 --> 00:02:23,000
All right, thanks Eric.

25
00:02:27,000 --> 00:02:28,000
Okay.

26
00:02:36,000 --> 00:02:39,000
Eric, can you hear me?

27
00:02:39,000 --> 00:02:40,000
What?

28
00:02:50,000 --> 00:02:52,000
I can't hear you.

29
00:02:52,000 --> 00:02:54,000
Yeah, yeah, I can hear you.

30
00:02:54,000 --> 00:02:55,000
I think this should be okay now.

31
00:02:55,000 --> 00:02:57,000
I have to switch the microphone.

32
00:02:57,000 --> 00:02:58,000
All right.

33
00:03:00,000 --> 00:03:04,000
All right, welcome everybody to our first guest lecture of the year.

34
00:03:04,000 --> 00:03:09,000
Guest lectures have always been a big part of the class.

35
00:03:09,000 --> 00:03:12,000
Back when I was a student, we had a few back then as well,

36
00:03:12,000 --> 00:03:16,000
so it's been a growing tradition and it presents a really good opportunity

37
00:03:16,000 --> 00:03:21,000
for students like yourselves to get insights from the industry

38
00:03:21,000 --> 00:03:25,000
about what the leading cutting-edge technology is,

39
00:03:25,000 --> 00:03:29,000
and some of which you might be working on when you take full-time jobs

40
00:03:29,000 --> 00:03:31,000
at some of these companies.

41
00:03:31,000 --> 00:03:33,000
I'm sure NVIDIA is going to be a big hire again this year,

42
00:03:33,000 --> 00:03:38,000
so certainly some of you might be working on exactly what Eric talks about today.

43
00:03:38,000 --> 00:03:43,000
So our first guest lecture, and first guest lecture for quite a few years nowadays,

44
00:03:43,000 --> 00:03:46,000
through the years, has been Eric Haynes.

45
00:03:46,000 --> 00:03:51,000
This is Eric's fifth consecutive year guest lecturing in the class

46
00:03:51,000 --> 00:03:55,000
and has been an amazing friend of the course in both his advice

47
00:03:55,000 --> 00:03:58,000
and research that he does and shares it with the class,

48
00:03:58,000 --> 00:04:01,000
joins our final projects and all that.

49
00:04:01,000 --> 00:04:04,000
So Eric's background is incredible.

50
00:04:04,000 --> 00:04:11,000
He started with a degree at Cornell back in 1986.

51
00:04:11,000 --> 00:04:12,000
I wasn't born then.

52
00:04:12,000 --> 00:04:14,000
I'm pretty sure most of you probably weren't born then either,

53
00:04:14,000 --> 00:04:16,000
if not all of you.

54
00:04:16,000 --> 00:04:22,000
So that's essentially when the Cornell box was created at Cornell University,

55
00:04:22,000 --> 00:04:24,000
and Eric was around for that.

56
00:04:24,000 --> 00:04:29,000
And through the years, Eric has done so much for the graphics community.

57
00:04:29,000 --> 00:04:31,000
He's really been a pioneer of it.

58
00:04:31,000 --> 00:04:36,000
Some of his major accomplishments have been while he was at Autodesk.

59
00:04:36,000 --> 00:04:40,000
He spent almost two decades there, so a lot of the software you use today,

60
00:04:40,000 --> 00:04:46,000
Maya, 3ds Max, and others have a lot of his work in real-time rendering built in.

61
00:04:46,000 --> 00:04:50,000
About five years ago, in 2018, Eric Haynes joined NVIDIA

62
00:04:50,000 --> 00:04:54,000
as a distinguished researcher working on real-time ray tracing,

63
00:04:54,000 --> 00:04:57,000
a lot of which he's going to be talking about today.

64
00:04:57,000 --> 00:05:00,000
His hobbies, if I can call it, include Minecraft,

65
00:05:00,000 --> 00:05:05,000
and Eric was pivotal in introducing real-time ray tracing into Minecraft

66
00:05:05,000 --> 00:05:09,000
using DXR, DirectX Ray Tracing.

67
00:05:09,000 --> 00:05:15,000
And yeah, he's a curator of real-time rendering resources.

68
00:05:15,000 --> 00:05:21,000
He's an author of real-time rendering and has also contributed to ray tracing gems.

69
00:05:21,000 --> 00:05:27,000
I could be here and speak for an hour, and I wouldn't list all his accomplishments.

70
00:05:27,000 --> 00:05:31,000
So Eric, thank you once again for sharing your time with us,

71
00:05:31,000 --> 00:05:36,000
and we look forward to another amazing guest lecture over the next few minutes.

72
00:05:36,000 --> 00:05:38,000
All right, thanks for the lecture, Son.

73
00:05:38,000 --> 00:05:43,000
Yeah, so right, I've given this lecture each year, and each year it changes.

74
00:05:43,000 --> 00:05:46,000
But luckily, the basics of ray tracing don't change.

75
00:05:46,000 --> 00:05:48,000
So I'm just going to run through.

76
00:05:48,000 --> 00:05:51,000
I've got way too many slides because there's sort of a lot of new, cool stuff

77
00:05:51,000 --> 00:05:57,000
that's just come up in the past few weeks, and I sort of want to stuff that in there.

78
00:05:57,000 --> 00:06:01,000
But I hate getting rid of the old stuff, so I'm going to just talk very rapidly.

79
00:06:01,000 --> 00:06:05,000
But the good news is that I have put the PDF of all these slides,

80
00:06:05,000 --> 00:06:10,000
which also includes in the notes a lot of pointers to resources and so on

81
00:06:10,000 --> 00:06:12,000
for the various things I'll talk about.

82
00:06:12,000 --> 00:06:16,000
So if I talk about something for 10 seconds and you're like,

83
00:06:16,000 --> 00:06:19,000
what the heck was that, you can always go back and look.

84
00:06:19,000 --> 00:06:26,000
So anyway, ray tracing, very basic idea, very simple idea of, gee, I want to form an image.

85
00:06:26,000 --> 00:06:31,000
Well, okay, think of basically if you look through any little pixel,

86
00:06:31,000 --> 00:06:36,000
what you're looking at is, you know, what's the closest object to the eye?

87
00:06:36,000 --> 00:06:38,000
And so we've done that in the past with rasterization,

88
00:06:38,000 --> 00:06:42,000
where we're sort of throwing all the triangles of a scene against the image plane

89
00:06:42,000 --> 00:06:46,000
and figuring out which pixel, you know, which triangle goes where.

90
00:06:46,000 --> 00:06:49,000
And, you know, if there's five or six triangles that overlap,

91
00:06:49,000 --> 00:06:52,000
which one's the closest one for each pixel?

92
00:06:52,000 --> 00:06:54,000
Here, for ray tracing, we kind of reverse the process.

93
00:06:54,000 --> 00:06:58,000
We go pixel by pixel and look at the scene and basically shoot a ray,

94
00:06:58,000 --> 00:07:01,000
compare it to all the objects, and say which one's the closest.

95
00:07:01,000 --> 00:07:04,000
So that gives us what's at that pixel.

96
00:07:04,000 --> 00:07:08,000
And then we can continue to shoot rays to do other things.

97
00:07:08,000 --> 00:07:15,000
So the simplest one is just to say, well, I want to see if that surface that I've hit is lit or not.

98
00:07:15,000 --> 00:07:20,000
And so I shoot a ray at the light, and if nothing blocks it, then I'm illuminated by that light source.

99
00:07:20,000 --> 00:07:25,000
And that goes way back to 1968, this guy at IBM, Arthur Apple.

100
00:07:25,000 --> 00:07:32,000
And anyway, so it's sort of an old idea, but, you know, a nice simple way to get shadows on things.

101
00:07:32,000 --> 00:07:39,000
In 1980, the seminal paper really was Turner Whitted at Bell Labs at the time,

102
00:07:39,000 --> 00:07:44,000
and he came up with the idea of, hey, gee, now we're sort of reversing the process.

103
00:07:44,000 --> 00:07:47,000
Instead of looking at things from the light's point of view,

104
00:07:47,000 --> 00:07:50,000
let's look at things from the eye's, you know, point of view and shoot out rays.

105
00:07:50,000 --> 00:07:58,000
And we got this idea of transparency that, in fact, was sort of around for about a year before Whitted came up with this.

106
00:07:58,000 --> 00:08:03,000
Like, in fact, I'll claim, you know, Cornell actually had one person who wrote a paper about, you know,

107
00:08:03,000 --> 00:08:05,000
using it for transparency and so on.

108
00:08:05,000 --> 00:08:09,000
But Whitted made the really important mental leap of going, hey, you know,

109
00:08:09,000 --> 00:08:15,000
we could start reflecting and refracting rays through and start making a tree of rays and evaluate that.

110
00:08:15,000 --> 00:08:17,000
And so that's a pretty simple idea.

111
00:08:17,000 --> 00:08:24,000
It's basically you're sort of assuming everything is either not reflective or it's highly reflective,

112
00:08:24,000 --> 00:08:29,000
like it's mirror-like or it's glass and very, you know, very well-polished glass kind of thing.

113
00:08:29,000 --> 00:08:33,000
And so at its simplest, let's say you're looking at a piece of glass.

114
00:08:33,000 --> 00:08:37,000
You shoot a ray out from, you know, through some pixel and you hit the piece of glass.

115
00:08:37,000 --> 00:08:41,000
From there, you spawn maybe a shadow ray to see what's going on on the glass's surface.

116
00:08:41,000 --> 00:08:43,000
Is it lit or not?

117
00:08:43,000 --> 00:08:48,000
But more importantly, the glass is mostly transparent and so on, a bit reflective.

118
00:08:48,000 --> 00:08:53,000
And so you shoot two more rays, one that's a reflection ray going down below

119
00:08:53,000 --> 00:08:56,000
and then another one that's going through that's a refraction ray.

120
00:08:56,000 --> 00:09:00,000
And then from there, you might again shoot a shadow ray and then continue on.

121
00:09:00,000 --> 00:09:06,000
And there's another refraction ray and a reflection ray and so on, you know,

122
00:09:06,000 --> 00:09:09,000
test those for shadowing and decide whether they're lit or not.

123
00:09:09,000 --> 00:09:14,000
And then you basically have this big bushy tree of rays and you kind of evaluate them from the bottom up

124
00:09:14,000 --> 00:09:19,000
and eventually you figure out some color of, you know, whatever's coming to your eye.

125
00:09:19,000 --> 00:09:23,000
So that's sort of basically what's called classical ray tracing.

126
00:09:23,000 --> 00:09:29,000
And about four years later, Rob Cook and a number of other people at Pixar came up with this idea

127
00:09:29,000 --> 00:09:35,000
that they called distribution ray tracing, which is still a term that they use at Pixar

128
00:09:35,000 --> 00:09:37,000
but pretty much nowhere else in the world.

129
00:09:37,000 --> 00:09:41,000
Everyone else calls it like stochastic or something else other than distribution

130
00:09:41,000 --> 00:09:46,000
because distribution makes you think of distributed computing, which is not at all what this is.

131
00:09:46,000 --> 00:09:51,000
His idea, though, is a great one, which is basically so you may have a glossy surface,

132
00:09:51,000 --> 00:09:55,000
something that's kind of polished but not quite totally reflective.

133
00:09:55,000 --> 00:10:00,000
He said, well, why don't I shoot a burst of rays out from that and sort of add those up,

134
00:10:00,000 --> 00:10:05,000
you know, over that for that ray instead of just trying to get a single reflection direction.

135
00:10:05,000 --> 00:10:07,000
And he said, well, I could apply this to other ideas.

136
00:10:07,000 --> 00:10:12,000
I could apply it to shadows or I could apply it to motion, motion blur.

137
00:10:12,000 --> 00:10:19,000
So the idea is that you may be shooting rays where, you know, each ray is sort of over a bit of time.

138
00:10:19,000 --> 00:10:25,000
Like you can say, OK, well, from 0 to 0.01 seconds or something,

139
00:10:25,000 --> 00:10:30,000
I'll shoot a ray at 0.01, 0.02 or whatever, you know,

140
00:10:30,000 --> 00:10:34,000
basically in that little span of time and add those up essentially.

141
00:10:34,000 --> 00:10:41,000
And that way you can get these sort of blurry objects because at each point of time, the objects are moving.

142
00:10:41,000 --> 00:10:44,000
And so you evaluate them differently each time.

143
00:10:44,000 --> 00:10:49,000
But to just make that a simple example is one for shadow rays where, so I've shot my ray,

144
00:10:49,000 --> 00:10:54,000
I've hit my object, and then I basically shoot more and more rays at the area light.

145
00:10:54,000 --> 00:10:57,000
And the more rays you shoot, the more expensive it is,

146
00:10:57,000 --> 00:11:01,000
but the better approximation you get as to how much of the area light you see.

147
00:11:01,000 --> 00:11:06,000
Is it fully illuminated, partially illuminated, sort of in a penumbra like shadow?

148
00:11:06,000 --> 00:11:09,000
Or is it fully in the umbra, fully shadowed?

149
00:11:09,000 --> 00:11:13,000
And so with that kind of approach, you get, you know, these nice images.

150
00:11:13,000 --> 00:11:16,000
And so the next step then is about two years later,

151
00:11:16,000 --> 00:11:23,000
Jim Kejia came up with this idea of diffuse interreflection where instead of sort of following glossy surfaces

152
00:11:23,000 --> 00:11:27,000
and sort of saying, well, let's shoot a burst of rays in the direction that the glossy surface likes,

153
00:11:27,000 --> 00:11:30,000
he says, well, for a diffuse surface, what do you do?

154
00:11:30,000 --> 00:11:32,000
Well, you kind of shoot rays in all directions.

155
00:11:32,000 --> 00:11:39,000
And the idea is that you sort of follow each ray that you're shooting

156
00:11:39,000 --> 00:11:41,000
and you just follow it and keep shooting it.

157
00:11:41,000 --> 00:11:45,000
And you sort of hit some new surface and shoot another ray and just keep bouncing around.

158
00:11:45,000 --> 00:11:50,000
And the idea is that eventually that ray will hopefully hit a light source.

159
00:11:50,000 --> 00:11:53,000
And that's the catch is that there's sort of this apple limit.

160
00:11:53,000 --> 00:11:59,000
In other words, you may have to do a very high number of bouncing of these rays.

161
00:11:59,000 --> 00:12:05,000
And so we tend to have shortcuts for some of this path tracing stuff where we try to figure out good ways to shoot those rays

162
00:12:05,000 --> 00:12:12,000
or else we just say at a certain point we call it quits and say, okay, well, just tell me how the light sources are affecting me along the path.

163
00:12:12,000 --> 00:12:18,000
Anyway, there's a lot of tricks, but at its limit, you have this idea of path tracing where you're just kind of taking a ray

164
00:12:19,000 --> 00:12:21,000
and saying, okay, from my eye I'm going to shoot a ray.

165
00:12:21,000 --> 00:12:23,000
I hit this diffuse box.

166
00:12:23,000 --> 00:12:29,000
Diffuse just means like a matte surface isn't reflective, like maybe concrete or something like that.

167
00:12:29,000 --> 00:12:33,000
And then I shoot a secondary ray in some direction and I just keep doing that.

168
00:12:33,000 --> 00:12:35,000
So this next ray happened to hit a light.

169
00:12:35,000 --> 00:12:36,000
Well, that's great.

170
00:12:36,000 --> 00:12:39,000
That's going to get a big contribution of direct illumination from that.

171
00:12:39,000 --> 00:12:43,000
But you have these other rays that are sort of bouncing around and they're picking up light.

172
00:12:43,000 --> 00:12:49,000
And hopefully they get to some light source basically and pick up some light.

173
00:12:49,000 --> 00:12:52,000
But basically the idea is you're just shooting more and more rays.

174
00:12:52,000 --> 00:12:58,000
And eventually you add up all the past contributions and get a color for the pixel.

175
00:12:58,000 --> 00:13:06,000
And this is what's commonly done for computer graphics and films is they have the luxury of not having to be interactive.

176
00:13:06,000 --> 00:13:10,000
So they can take 20 minutes a frame or two hours a frame or whatever they like.

177
00:13:11,000 --> 00:13:16,000
And so they will typically shoot anywhere from 1,000 to 5,000, you know, you name it.

178
00:13:16,000 --> 00:13:18,000
Sky's the limit.

179
00:13:18,000 --> 00:13:23,000
You know, sort of number of rays per pixel, number of these path rays per pixel.

180
00:13:23,000 --> 00:13:27,000
So that obviously is a little bit pricier than interactive.

181
00:13:27,000 --> 00:13:32,000
But anyway, the whole point of this is that ray tracing is great because it's so simple.

182
00:13:32,000 --> 00:13:37,000
So Paul Heckbert had part of this for graphics gems.

183
00:13:37,000 --> 00:13:41,000
He basically had this little contest of, hey, write a little ray tracer.

184
00:13:41,000 --> 00:13:43,000
Try to make it as small as possible.

185
00:13:43,000 --> 00:13:45,000
But it's still doing something interesting.

186
00:13:45,000 --> 00:13:53,000
And so here we have this, you know, 1,607-byte ray tracer, which basically it's just super compressed and kind of crazy and so on.

187
00:13:53,000 --> 00:14:00,000
But what it basically does is it ray traces a bunch of spheres because a ray is a very simple object.

188
00:14:00,000 --> 00:14:02,000
It's just a point and a direction.

189
00:14:02,000 --> 00:14:04,000
And a sphere is a very simple object.

190
00:14:04,000 --> 00:14:06,000
It's just a point and a radius.

191
00:14:06,000 --> 00:14:11,000
So combining those two, it makes for a simple quadratic equation that you solve.

192
00:14:11,000 --> 00:14:18,000
And you can get this sort of nice, you know, reflections and refractions in this case and shadows and whatnot.

193
00:14:18,000 --> 00:14:23,000
Here's another business card that's even smaller and has a lot more spheres.

194
00:14:23,000 --> 00:14:26,000
And anyway, you get the idea.

195
00:14:26,000 --> 00:14:36,000
So your first quiz question here, and this is my chance to take a little gulp of water, is which one of these is the real photo?

196
00:14:36,000 --> 00:14:38,000
And I don't know.

197
00:14:38,000 --> 00:14:40,000
I have to look at my course notes each time.

198
00:14:40,000 --> 00:14:43,000
And it's the one on the left, it turns out.

199
00:14:43,000 --> 00:14:50,000
And this was an experiment done in sort of mid to late 80s where we had this idea of this Cornell box, this sort of simple box scene.

200
00:14:50,000 --> 00:14:52,000
And we said, well, let's make a real one at Cornell.

201
00:14:52,000 --> 00:14:57,000
And let's, you know, actually compare it to what our simulations are giving us.

202
00:14:57,000 --> 00:14:59,000
And we're in pretty good agreement.

203
00:14:59,000 --> 00:15:02,000
And it turns out the answer is yes, so that was good.

204
00:15:02,000 --> 00:15:07,000
So just to look at that Cornell box and to sort of go through some of the ray tracing things we've just seen.

205
00:15:07,000 --> 00:15:10,000
So classical ray tracing gives you these hard shadows.

206
00:15:10,000 --> 00:15:15,000
And the hard shadows are done by, you know, that little tiny point light at the top here.

207
00:15:15,000 --> 00:15:21,000
And then you have these rays that you just get a single ray that goes to that point light, and you see they're on or off, very binary.

208
00:15:21,000 --> 00:15:23,000
For soft shadows, you have a nice area light.

209
00:15:23,000 --> 00:15:29,000
So you might shoot a bunch of rays at that area light, and that gives you these nice soft penumbras.

210
00:15:29,000 --> 00:15:35,000
And then there's interreflection, or called indirect lighting, or color bleeding, or global illumination,

211
00:15:35,000 --> 00:15:40,000
or the sort of old-fashioned Cornell thing was called, we solved it with this thing called radiosity,

212
00:15:40,000 --> 00:15:44,000
which is just sort of a heat transfer kind of a system.

213
00:15:44,000 --> 00:15:50,000
But anyway, the whole point here is that you're essentially doing, nowadays, you're doing a path trace.

214
00:15:50,000 --> 00:15:57,000
And you, you know, shoot from the, you're basically shooting paths from some point on your surface.

215
00:15:57,000 --> 00:15:59,000
And you go, okay, we'll just start bouncing rays out.

216
00:15:59,000 --> 00:16:01,000
Okay, I bounced one out here.

217
00:16:01,000 --> 00:16:02,000
Oh, great, it hit a green wall.

218
00:16:02,000 --> 00:16:05,000
But then I bounced it again, and oh, look, it hit the light.

219
00:16:05,000 --> 00:16:09,000
And okay, so that means some, you know, this wall over here, it got some green.

220
00:16:09,000 --> 00:16:16,000
So that's why this area in shadow is a bit green, and this area of shadow on the other side is a bit red,

221
00:16:16,000 --> 00:16:18,000
is because it's bouncing light around.

222
00:16:18,000 --> 00:16:25,000
What's good to keep in mind here is sort of the reason we're shooting rays from the eye as opposed to the light,

223
00:16:25,000 --> 00:16:30,000
is if you think about it, if you shoot them all from the light, you have lots of rays bouncing around,

224
00:16:30,000 --> 00:16:33,000
and they're depositing, you know, they're sort of hitting things and warming up, you know,

225
00:16:33,000 --> 00:16:37,000
various surfaces and having some physical effects and so on.

226
00:16:37,000 --> 00:16:40,000
But the amount of light that actually gets to your eye is really,

227
00:16:40,000 --> 00:16:43,000
really tiny compared to how much light's bouncing around the environment.

228
00:16:43,000 --> 00:16:49,000
So that's one way to think about why we kind of reverse that process.

229
00:16:49,000 --> 00:16:52,000
And, oh, finally, there's just glossy reflections, which is, again,

230
00:16:52,000 --> 00:16:56,000
you get these sort of softer reflections here.

231
00:16:56,000 --> 00:16:59,000
And, again, you're just sort of shooting up in more of a quick fashion.

232
00:16:59,000 --> 00:17:03,000
You can just think of it as shooting out a burst of rays.

233
00:17:03,000 --> 00:17:10,000
And so here's just another example of a ray trace, which is just varying the glossiness of the surface

234
00:17:10,000 --> 00:17:13,000
and showing how that varies.

235
00:17:13,000 --> 00:17:15,000
Just another ray trace.

236
00:17:15,000 --> 00:17:18,000
And here's, I think this is another quiz question.

237
00:17:18,000 --> 00:17:25,000
Which ray tracing effects are you sort of seeing or are you seeing in this environment, in this picture,

238
00:17:25,000 --> 00:17:31,000
as opposed to if you just tried to make, like, a rasterization version of this thing?

239
00:17:31,000 --> 00:17:38,000
And so that's my chance to go up water.

240
00:17:38,000 --> 00:17:41,000
So, yeah, here's the three things that I see, at least, are soft shadows.

241
00:17:41,000 --> 00:17:46,000
So you're getting the softer shadow because you're shooting a number of rays towards the sun.

242
00:17:46,000 --> 00:17:52,000
And here's the glossy reflections where it's not a perfect mirror reflection,

243
00:17:52,000 --> 00:17:59,000
but rather you're, again, sort of shooting and getting more of a glossy kind of a thing by shooting more rays.

244
00:17:59,000 --> 00:18:04,000
And you also get inner reflection, which is basically, if you think about it,

245
00:18:04,000 --> 00:18:07,000
the light in this scene is just where the sunlight is.

246
00:18:07,000 --> 00:18:12,000
And maybe you could say that some of the light is bouncing off of this ceiling here.

247
00:18:12,000 --> 00:18:17,000
But, really, the whole area is lit because of path trace kind of thing,

248
00:18:17,000 --> 00:18:24,000
that you're actually picking up light from bouncing rays around and picking it up from other surfaces and other areas.

249
00:18:24,000 --> 00:18:27,000
There's one other place where you might see ray tracing get used.

250
00:18:27,000 --> 00:18:30,000
And it's almost more of a ray casting thing.

251
00:18:30,000 --> 00:18:33,000
And it's kind of a fake global illumination effect.

252
00:18:33,000 --> 00:18:36,000
There's no actual lights in this scene.

253
00:18:36,000 --> 00:18:40,000
All this scene is being lit by is a thing called ambient occlusion.

254
00:18:40,000 --> 00:18:44,000
And the idea there is that it's kind of in the name.

255
00:18:44,000 --> 00:18:50,000
Like ambient light is one where we sort of say, well, just add a fudge factor to the scene so that nothing's totally dark.

256
00:18:50,000 --> 00:18:55,000
So people do that by typically, you know, you put a light at the eye in the scene so it doesn't cast any shadows.

257
00:18:55,000 --> 00:18:57,000
It's just giving a little light to everything.

258
00:18:57,000 --> 00:19:01,000
Or maybe you just color everything 10% brighter or whatever.

259
00:19:01,000 --> 00:19:06,000
But with ambient occlusion, what you're doing is trying to get something that's at least sort of physically based.

260
00:19:06,000 --> 00:19:08,000
And the idea there is simple enough.

261
00:19:08,000 --> 00:19:13,000
It's just saying, well, given some point, think of a hemisphere above that point.

262
00:19:13,000 --> 00:19:18,000
And shoot out rays in kind of a random stochastic pattern in that hemisphere.

263
00:19:18,000 --> 00:19:21,000
And just see is anything within three feet of me or not.

264
00:19:21,000 --> 00:19:27,000
And if something's within three feet and I hit it, then I'm probably dark in that area.

265
00:19:27,000 --> 00:19:29,000
I'm in a darker spot in the scene.

266
00:19:29,000 --> 00:19:35,000
And if I don't see anything, so like, for example, this other sample point here, I shoot out a bunch of rays.

267
00:19:35,000 --> 00:19:37,000
And most of them don't hit anything.

268
00:19:37,000 --> 00:19:39,000
So that's more well lit.

269
00:19:39,000 --> 00:19:44,000
That's kind of another interesting use of ray tracing, where it's not really truly a global illumination algorithm.

270
00:19:44,000 --> 00:19:47,000
But it's a popular one for games and so on.

271
00:19:47,000 --> 00:19:49,000
There's a bunch of variants on this.

272
00:19:49,000 --> 00:19:52,000
There's other faster ones, but they're less reliable.

273
00:19:52,000 --> 00:19:56,000
So using ray tracing gives you a more consistent result.

274
00:19:56,000 --> 00:20:05,000
Another thing you can do with ray tracing is depth of field or background blur, where you're basically focusing the camera.

275
00:20:05,000 --> 00:20:12,000
And there you're kind of changing where the ray starts on the lens, essentially, or on the lens system.

276
00:20:12,000 --> 00:20:16,000
And so you can imagine the lens is kind of focused on those characters.

277
00:20:16,000 --> 00:20:25,000
So they're nice and sharp, but everything else gets a bit blurry because the rays are kind of coming from different angles and adding up to give this kind of blurry effect.

278
00:20:25,000 --> 00:20:32,000
And you can change the, you know, change where that depth of field is by changing the focus distance.

279
00:20:32,000 --> 00:20:36,000
So the character in the back is in focus, and you get this foreground blur.

280
00:20:36,000 --> 00:20:41,000
And this is one that, again, you can do a lot of faking as far as rasterization goes.

281
00:20:41,000 --> 00:20:46,000
Like games have had this kind of depth of field stuff, you know, in them.

282
00:20:46,000 --> 00:20:50,000
But you kind of have to do a lot of fakey filtering and sort of kludgy stuff.

283
00:20:50,000 --> 00:20:52,000
What's nice about ray tracing is it just kind of falls out.

284
00:20:52,000 --> 00:20:58,000
You know, you just make a little variation in what you're doing, and you get these cool effects.

285
00:20:58,000 --> 00:21:03,000
And as I mentioned, you can get this motion blur effect, which is just basically kind of time slicing,

286
00:21:03,000 --> 00:21:11,000
but trying to do it in a semi-random way so that you don't get, so that it doesn't just look like, you know, five separate images added up together,

287
00:21:11,000 --> 00:21:16,000
which would look kind of clunky and would look kind of, you know, jagged and so on.

288
00:21:16,000 --> 00:21:19,000
Here you're trying to get sort of this smooth thing by doing this.

289
00:21:19,000 --> 00:21:25,000
And this is used all the time for, you know, computer graphics and films, for sure.

290
00:21:25,000 --> 00:21:33,000
Another one, you know, Shazan mentioned I like Mineways or Minecraft, and indeed this is a Minecraft scene.

291
00:21:33,000 --> 00:21:36,000
And it's done in this renderer called Chunky.

292
00:21:36,000 --> 00:21:44,000
And basically, you can get atmospheric effects by doing ray tracing, where instead of ray tracing where the ray just goes through the whole scene,

293
00:21:44,000 --> 00:21:51,000
you instead kind of march along the ray and find out, you know, volumes, essentially volumes of space where,

294
00:21:51,000 --> 00:21:57,000
okay, there's light here, there's some kind of medium, like there's dust or whatever in the air, water vapor, whatever.

295
00:21:57,000 --> 00:22:00,000
And so you have a scattering function, basically.

296
00:22:00,000 --> 00:22:04,000
And so you're able to sort of walk through that space and add up the scatters,

297
00:22:04,000 --> 00:22:11,000
and that gives you that kind of occlusion, that atmospheric effect.

298
00:22:11,000 --> 00:22:16,000
And one last effect that I'll mention is what's called caustics.

299
00:22:16,000 --> 00:22:25,000
And here what's happening is this sort of, it's like a pool, like a swimming pool, where you have some waves on the top,

300
00:22:25,000 --> 00:22:33,000
and you'll see, you know, if you're on an indoor pool at the YMCA or whatever, you get these, you know, sort of caustics on the walls.

301
00:22:33,000 --> 00:22:40,000
It's a little more obvious under the water, you sort of see at the bottom of the tank, these caustics form.

302
00:22:41,000 --> 00:22:46,000
And this is just kind of a clever real-time effect that was done in Ray Tracing Gems 1.

303
00:22:46,000 --> 00:22:49,000
There's an article about how Guy did this.

304
00:22:49,000 --> 00:22:52,000
There's also beams of light kind of thing going on here.

305
00:22:52,000 --> 00:22:57,000
So the caustics normally are pretty tough to do because you're having to trace a lot of rays.

306
00:22:57,000 --> 00:23:00,000
But you can get these really glorious effects.

307
00:23:00,000 --> 00:23:07,000
You're sort of having to, if you're sort of tracing from the surface, you're kind of shooting a lot of rays towards the glass

308
00:23:07,000 --> 00:23:11,000
and seeing, you know, which ones get to the light, and that can be pretty pricey.

309
00:23:11,000 --> 00:23:15,000
There's, in fact, like I say, there's 101 algorithms for this kind of stuff.

310
00:23:15,000 --> 00:23:24,000
You can also reverse the process and really do shoot light from the light and go through the glass and deposit what's called like a photon map

311
00:23:24,000 --> 00:23:29,000
and sort of, you know, say, well, where did all the, you know, did the photons gather anywhere?

312
00:23:29,000 --> 00:23:31,000
I shot a whole bunch through the glass from the light.

313
00:23:31,000 --> 00:23:33,000
You know, where's the hot spot and so on.

314
00:23:33,000 --> 00:23:38,000
But this is kind of done the right way, as it were, kind of doing with path tracing.

315
00:23:38,000 --> 00:23:40,000
You get these really nice effects.

316
00:23:40,000 --> 00:23:43,000
And, yeah, with that, I want to point out one danger.

317
00:23:43,000 --> 00:23:44,000
Don't be me.

318
00:23:44,000 --> 00:23:50,000
That's basically the story here is that, and I've seen a lot of other ray tracing people rendering.

319
00:23:50,000 --> 00:23:52,000
So you'll gather little artifacts.

320
00:23:52,000 --> 00:23:58,000
You'll gather like, oh, here's this cool piece of glass or here's this, you know, piece of marble or piece of copper or piece of wood.

321
00:23:58,000 --> 00:24:02,000
And, you know, see how do these materials work and what's going on with them.

322
00:24:02,000 --> 00:24:04,000
You tend to gather these goofy little things.

323
00:24:04,000 --> 00:24:10,000
And I've been gathering, you know, so I had this little crystal ball thing for a few years.

324
00:24:10,000 --> 00:24:12,000
And I moved from one office to another.

325
00:24:12,000 --> 00:24:14,000
And then I was moving to yet another office.

326
00:24:14,000 --> 00:24:17,000
And I kind of looked closely finally and was like, hey, wait a second.

327
00:24:17,000 --> 00:24:19,000
What are those marks at the bottom?

328
00:24:19,000 --> 00:24:22,000
And, yes, they are indeed burn marks.

329
00:24:22,000 --> 00:24:25,000
You know, here's I'm showing it sort of in the sun.

330
00:24:25,000 --> 00:24:28,000
It's, you know, focusing some burn here.

331
00:24:28,000 --> 00:24:32,000
Luckily it did not step out of the office on fire or anything like this.

332
00:24:32,000 --> 00:24:34,000
So just be aware.

333
00:24:34,000 --> 00:24:40,000
Don't put your shiny or your glass objects in your window basically.

334
00:24:40,000 --> 00:24:42,000
In fact, if you Google, it's not so funny.

335
00:24:42,000 --> 00:24:57,000
Because, like, if you Google, you know, snow globe fire, you know, about once a year there will be somebody whose house catches on fire because they put their, you know, snow globe out during, you know, before Christmas in their window.

336
00:24:57,000 --> 00:25:00,000
And it focused like a lens.

337
00:25:00,000 --> 00:25:04,000
So anyway, those are sort of the basic ray tracing techniques out there.

338
00:25:04,000 --> 00:25:06,000
And they do get used in different kinds of games.

339
00:25:06,000 --> 00:25:10,000
You know, there's reflections, global illumination, shadows, and so on.

340
00:25:10,000 --> 00:25:12,000
So those are kind of the big ones.

341
00:25:12,000 --> 00:25:20,000
So I'm going to move now to hardware.

342
00:25:20,000 --> 00:25:24,000
So ray tracing is one of these things that's called embarrassingly parallel.

343
00:25:24,000 --> 00:25:27,000
Because it's kind of obvious how to make it faster.

344
00:25:27,000 --> 00:25:29,000
You know, we're going pixel by pixel.

345
00:25:29,000 --> 00:25:31,000
So, hey, I've got an idea.

346
00:25:31,000 --> 00:25:38,000
And in fact, Turner Witt is sort of the first I heard of this idea, which was he talks about, like, you know, people asked him, well, hey, gee, how can we speed this up?

347
00:25:38,000 --> 00:25:40,000
How can we make ray tracing fast?

348
00:25:40,000 --> 00:25:46,000
And he said, well, I'll tell you what, what you do is you get a Cray, which at the time was the fastest supercomputer.

349
00:25:46,000 --> 00:25:47,000
It's now nothing at all.

350
00:25:47,000 --> 00:25:52,000
But at the time it was the supercomputer that could, you know, compute a bunch of rays per second.

351
00:25:52,000 --> 00:25:55,000
And he said, well, just get a football field full of those.

352
00:25:55,000 --> 00:25:59,000
And on the top of each Cray you put a red, a green, and a blue light bulb.

353
00:25:59,000 --> 00:26:06,000
And you basically have each Cray feed its pixel result and turn on those red, green, blue bulbs accordingly.

354
00:26:06,000 --> 00:26:10,000
And then you fly the Goodyear blimp overhead and, you know, you can see your picture lit up.

355
00:26:10,000 --> 00:26:12,000
You know, very, very simple system.

356
00:26:12,000 --> 00:26:19,000
But the point is, is that, you know, basically if you put a processor on each pixel, you can get a pretty darn fast system.

357
00:26:19,000 --> 00:26:24,000
That's a little more, you know, more transistors than we really have the ability to do.

358
00:26:24,000 --> 00:26:32,000
I mean, you know, if there's a million or two million or however many pixels per, you know, monitor, cheap monitor, nowadays you can't quite do that.

359
00:26:32,000 --> 00:26:38,000
But the idea is sound, that you can do a lot of this stuff in parallel and there's not a lot of crosstalk between the pixels.

360
00:26:38,000 --> 00:26:41,000
They're all pretty much independent.

361
00:26:41,000 --> 00:26:53,000
And one of the things that, it's funny actually, like, because our CEO, Jensen Huang, gave this keynote talk a few weeks ago at GTC,

362
00:26:53,000 --> 00:26:58,000
which is a conference we have every few months or so, just saying, you know, here's what's going on with NVIDIA.

363
00:26:58,000 --> 00:27:01,000
And here's how much other, you know, cool talks and so on.

364
00:27:01,000 --> 00:27:03,000
He said, oh, you know, Moore's Law is ending.

365
00:27:03,000 --> 00:27:06,000
And that made the press, which is like, I'm like, how did that make the press?

366
00:27:06,000 --> 00:27:10,000
He's been saying that ever since I joined the company in, you know, 2018.

367
00:27:10,000 --> 00:27:14,000
So they're finally starting to pay attention to, wait, wait, wait, the same Moore's Law is ending.

368
00:27:14,000 --> 00:27:23,000
And it's sort of the strict version of Moore's Law, which is the idea that, you know, as we go along in time,

369
00:27:23,000 --> 00:27:30,000
the number I like to use is that every five years, processors get 10 times faster.

370
00:27:30,000 --> 00:27:35,000
Or another way you could say it is every five years, processors get 10 times cheaper.

371
00:27:35,000 --> 00:27:38,000
So the same processing power is a lot less cost.

372
00:27:38,000 --> 00:27:46,000
And his basic point is, is that processing power, you know, we're able to stuff more and more transistors in the space.

373
00:27:46,000 --> 00:27:49,000
And we're able to sort of scale them down to a certain extent.

374
00:27:49,000 --> 00:27:51,000
But that process is becoming more and more expensive.

375
00:27:51,000 --> 00:27:54,000
And we're sort of losing that percentage kind of a thing.

376
00:27:54,000 --> 00:27:56,000
And so this slide is actually from Google.

377
00:27:56,000 --> 00:27:59,000
So it's not just NVIDIA saying Moore's Law is ending.

378
00:27:59,000 --> 00:28:05,000
Anyway, so NVIDIA's kind of answer is to say, well, with GPU computing,

379
00:28:05,000 --> 00:28:12,000
you can try to focus on various tasks that we really want to accelerate and try to still keep them competitive as far as cost.

380
00:28:12,000 --> 00:28:14,000
But we need to have specialized hardware.

381
00:28:14,000 --> 00:28:21,000
I mean, if you think about when you're designing a chip, a microprocessor, you basically have three ways you can use your transistors.

382
00:28:21,000 --> 00:28:28,000
You can make a couple of transistor and a capacitor, and that gives you a little memory, one bit of memory.

383
00:28:28,000 --> 00:28:30,000
Or you can make a general purpose processor.

384
00:28:30,000 --> 00:28:35,000
Or you can make special purpose hardware that does special things, basically.

385
00:28:35,000 --> 00:28:38,000
And that's really about the three ways.

386
00:28:38,000 --> 00:28:43,000
And so NVIDIA's thrust is, well, we put in special purpose hardware for rasterization.

387
00:28:43,000 --> 00:28:45,000
Gee, is there other special purpose hardware?

388
00:28:45,000 --> 00:28:47,000
What kinds of things are coming down the pike?

389
00:28:47,000 --> 00:28:50,000
And what should we try to accelerate?

390
00:28:50,000 --> 00:28:57,000
And so NVIDIA's answer in 2018 was to have this idea of, well, we'll add some more things.

391
00:28:57,000 --> 00:28:59,000
And this is just kind of schematic.

392
00:28:59,000 --> 00:29:01,000
This is a marketing slide.

393
00:29:01,000 --> 00:29:04,000
It's not how much of the footprint actually gets these things.

394
00:29:04,000 --> 00:29:13,000
But the idea is that we added tensor cores, which are for artificial intelligence, deep learning, evaluation of neural nets.

395
00:29:13,000 --> 00:29:16,000
And we added these RT cores, ray tracing cores.

396
00:29:16,000 --> 00:29:20,000
And the ray tracing cores, as well, focus on in the next bit.

397
00:29:20,000 --> 00:29:29,000
But basically, we added special purpose hardware with the idea of speeding up things that we saw as common to various processes.

398
00:29:29,000 --> 00:29:35,000
And so, yeah, just a week and some ago, I guess, kind of lost track of when exactly that was out.

399
00:29:35,000 --> 00:29:40,000
But anyway, this new thing, Ampere, is this next generation.

400
00:29:40,000 --> 00:29:42,000
And, you know, it's sort of new, new, new.

401
00:29:42,000 --> 00:29:47,000
It's sort of new, various kinds of shaders, RT core, tensor cores.

402
00:29:47,000 --> 00:29:51,000
There's also this sort of optical flow accelerator, video engine.

403
00:29:51,000 --> 00:29:55,000
So there's other goodies that are basically getting put on the chip and so on.

404
00:29:55,000 --> 00:30:02,000
And just trying to, and that's sort of how NVIDIA works to a good extent is, you know, we have a large research group.

405
00:30:02,000 --> 00:30:04,000
Some of it's for software.

406
00:30:04,000 --> 00:30:14,000
You know, we actually have a bunch of software that we try to get out to the world, you know, in various forms so that people can take advantage of GPUs.

407
00:30:14,000 --> 00:30:19,000
But there's also, well, we actually, you know, what looks good and promising for hardware.

408
00:30:24,000 --> 00:30:33,000
So, if you know rasterization at all, or even if you don't, the basic rasterization just goes through this idea of you emit a draw call.

409
00:30:33,000 --> 00:30:36,000
You say, I want to draw this triangle or this mesh or whatever.

410
00:30:36,000 --> 00:30:41,000
And a bunch of vertex shading occurs, vertices get moved around possibly or whatever.

411
00:30:42,000 --> 00:30:47,000
And then you rasterize, you basically form triangles out of those vertices, throw those at the screen.

412
00:30:47,000 --> 00:30:57,000
You pixel shade, and then you blend whatever that does shading, you know, determines what lights are hitting the surface and so on.

413
00:30:57,000 --> 00:31:03,000
And then you finally output that triangle as needed to the screen, if it's visible or not.

414
00:31:03,000 --> 00:31:10,000
Ray tracing is kind of the same thing in a sense, but you're generating rays instead of throwing triangles at the screen.

415
00:31:10,000 --> 00:31:14,000
And the important difference really is that you're going through this traversal idea.

416
00:31:14,000 --> 00:31:21,000
So, you're going to traverse the scene, you're going to find out what the ray hits, and then you're going to shade what the ray hits.

417
00:31:21,000 --> 00:31:27,000
But you also, by shading something, as we saw, you have a sort of tree of rays, like you're possibly emitting more rays.

418
00:31:27,000 --> 00:31:31,000
You're making maybe a shadow ray or a reflection ray or whatever.

419
00:31:31,000 --> 00:31:36,000
And so, that means there's sort of this recursive thing where the shading can emit more rays.

420
00:31:36,000 --> 00:31:38,000
It can go and throw another ray into the pile.

421
00:31:38,000 --> 00:31:46,000
It's basically, you know, there's sort of a whole bunch of rays coming in, and they're kind of grouped up and set up to figure out.

422
00:31:46,000 --> 00:31:50,000
They're not all done simultaneously, since we have less processors than pixels.

423
00:31:50,000 --> 00:31:56,000
So, this part's, yeah, sort of the RTX part, NVIDIA's part.

424
00:31:56,000 --> 00:32:01,000
The other trend that's going on is just more and more memory is getting available.

425
00:32:01,000 --> 00:32:07,000
Like, if you think about how much memory you need to save, you know, even a 4K image, it's only a few megabytes.

426
00:32:07,000 --> 00:32:12,000
And there's not, you know, there's red and there's green, there's blue, and there's a whole bunch of pixels, and that's how many bytes you need.

427
00:32:12,000 --> 00:32:16,000
Even if it's high definition, you may only need twice as many bytes.

428
00:32:16,000 --> 00:32:20,000
But, you know, the number of bytes is in the, you know, 10 million at most kind of thing.

429
00:32:20,000 --> 00:32:27,000
So, what all the other bytes are for is basically putting model data or any other kinds of structures you need that'll help you out.

430
00:32:27,000 --> 00:32:30,000
And so, or textures, things like that.

431
00:32:30,000 --> 00:32:32,000
So, this has gone up over time.

432
00:32:32,000 --> 00:32:37,000
And so, a single processor, a single GPU might have, like, 24 gigabytes at the higher end.

433
00:32:37,000 --> 00:32:44,000
But you can also have these really crazy processors where you have, like, 16 GPUs tied together over a fast bus.

434
00:32:44,000 --> 00:32:46,000
So, they're all sharing each other's memory.

435
00:32:46,000 --> 00:32:49,000
And that can get you up to, you know, 512 gigabytes.

436
00:32:49,000 --> 00:32:56,000
And those things cost, like, you know, I forget, $300,000 on up or whatever for a serious machine.

437
00:32:56,000 --> 00:33:02,000
But, you know, if you think about it, like, film, for example, I know as of a few years ago, I don't know what the average is now.

438
00:33:02,000 --> 00:33:13,000
But when they sort of polled a few years ago, the number was, like, oh, for a complicated scene, it was 50 gigabytes of data for a single scene, for a single render.

439
00:33:13,000 --> 00:33:18,000
You know, lots of texturing, lots of detail, all that kind of stuff, crazy amounts.

440
00:33:18,000 --> 00:33:24,000
And so, you know, it's nice if you can get into that spot where you can fit all the data into the machine and just have it crunch on that image.

441
00:33:25,000 --> 00:33:30,000
So, talking about assets, there's sort of an interesting thing in software.

442
00:33:30,000 --> 00:33:36,000
This is from Unreal Engine, which is from Epic, you know, just a game engine commonly used.

443
00:33:36,000 --> 00:33:48,000
And one of their big things in the past year or so has been Nanite, which is just they've really tried to get a hold on, well, how do I deal with, you know, some city that has, you know, 7 million instance assets?

444
00:33:48,000 --> 00:33:50,000
In other words, 7 million separate objects.

445
00:33:50,000 --> 00:33:53,000
And each of those may have millions of polygons in them.

446
00:33:53,000 --> 00:33:55,000
How do I deal with this level of detail?

447
00:33:55,000 --> 00:34:00,000
And so, they have a software version or a software system, which I'll talk about a little bit later.

448
00:34:00,000 --> 00:34:06,000
But if you think about it, even if you're at sort of far away from things, you may still have just a ton of models out there.

449
00:34:06,000 --> 00:34:08,000
And, you know, you shoot one ray into that.

450
00:34:08,000 --> 00:34:10,000
Well, you know, what are you going to do?

451
00:34:10,000 --> 00:34:14,000
I mean, you don't really want to shoot a ray against, you know, 5 million triangles.

452
00:34:14,000 --> 00:34:17,000
That would be shooting a ray against, well, is it hitting triangle one?

453
00:34:17,000 --> 00:34:18,000
No.

454
00:34:18,000 --> 00:34:19,000
Two?

455
00:34:19,000 --> 00:34:20,000
No.

456
00:34:20,000 --> 00:34:21,000
Three?

457
00:34:21,000 --> 00:34:22,000
No.

458
00:34:22,000 --> 00:34:29,000
So, the way ray chasing speeds this up is the one we've chosen, at least, is the bounding volume hierarchy.

459
00:34:29,000 --> 00:34:35,000
And it's the one that's kind of won out in the data structure, as I think of it, as in the 80s and 90s.

460
00:34:35,000 --> 00:34:39,000
There were lots and lots of ideas, grids and octrees and all kinds of things.

461
00:34:39,000 --> 00:34:47,000
But the one that sort of won out as most flexible and efficient overall is the bounding volume hierarchy.

462
00:34:48,000 --> 00:34:58,000
And sometimes you'll see other ones just because they fit, like, if your voxel rendering might be much more suited to just have a grid that you're walking or things like that.

463
00:34:58,000 --> 00:35:01,000
But, anyway, bounding volume hierarchy, very simple idea.

464
00:35:01,000 --> 00:35:09,000
So, imagine you have a ray coming from, say, the left, and it kind of skims over the top of this sphere and hits this red object at the top.

465
00:35:09,000 --> 00:35:16,000
So, what you're doing is you'll test that ray against the root node, which is this big circle here.

466
00:35:16,000 --> 00:35:19,000
And you say, well, okay, I hit the root.

467
00:35:19,000 --> 00:35:23,000
All right, so that means now I have to test against the two circles inside.

468
00:35:23,000 --> 00:35:28,000
Well, the rays up here, it hits this circle on the top, but it misses this circle.

469
00:35:28,000 --> 00:35:33,000
So that means all these objects to the right side of the hierarchy can all get thrown away.

470
00:35:33,000 --> 00:35:35,000
I don't have to look at any of those.

471
00:35:35,000 --> 00:35:37,000
So that's where the savings comes, basically.

472
00:35:37,000 --> 00:35:39,000
And here the ray continues.

473
00:35:39,000 --> 00:35:43,000
It maybe hits the spheres here and finally hits the object.

474
00:35:43,000 --> 00:35:45,000
It's tested against the object itself.

475
00:35:45,000 --> 00:35:51,000
But as you get more and more objects in a scene, you get this sort of order log n kind of behavior.

476
00:35:51,000 --> 00:35:56,000
And obviously logarithm of n is much smaller than n, which is the number of objects.

477
00:35:56,000 --> 00:36:01,000
And here's what the algorithm sort of looks like more realistically.

478
00:36:01,000 --> 00:36:06,000
We have these things called AABBs that are axis-aligned bounding boxes.

479
00:36:06,000 --> 00:36:12,000
And they're basically just a ray bounding box operation is a nice, fast operation.

480
00:36:12,000 --> 00:36:14,000
And you can test against a bunch of boxes.

481
00:36:14,000 --> 00:36:18,000
And then you kind of go down the hierarchy until, you know, you may miss a bunch of triangles and finally hit a triangle.

482
00:36:18,000 --> 00:36:20,000
Okay, great, you're done.

483
00:36:20,000 --> 00:36:26,000
But again, you've, you know, instead of having to shoot against all the bunnies triangles, you just maybe shot against a small subset.

484
00:36:31,000 --> 00:36:35,000
So these ray tracing cores are focused on three things.

485
00:36:35,000 --> 00:36:39,000
Basically trying to do this bounding volume hierarchy as quickly as possible.

486
00:36:39,000 --> 00:36:42,000
So that just stays local to the bounding volume hierarchy.

487
00:36:42,000 --> 00:36:48,000
The bounding volume hierarchy just kind of goes and says, okay, you know, I'm walking this ray through this hierarchy.

488
00:36:48,000 --> 00:36:52,000
Did I hit anything? You know, okay, did I, do I go deeper in the tree and so on?

489
00:36:52,000 --> 00:36:54,000
And it just keeps track of all that.

490
00:36:54,000 --> 00:36:58,000
The other thing that accelerates is ray triangle intersection.

491
00:36:58,000 --> 00:37:02,000
So again, it can all be local to this little ray tracing core.

492
00:37:02,000 --> 00:37:08,000
It doesn't have to go out, leave the ray tracing core at all and go, you know, go to some other processing unit.

493
00:37:09,000 --> 00:37:11,000
And triangles are very popular, basically.

494
00:37:11,000 --> 00:37:15,000
Everything sort of gets made of triangles eventually in most systems.

495
00:37:15,000 --> 00:37:20,000
You know, you can, ray tracing is very flexible and that you could, you know, shoot.

496
00:37:20,000 --> 00:37:27,000
If you have a ray that can go against some other object and have some equation or some algorithm to solve it, sure, use that other object.

497
00:37:27,000 --> 00:37:29,000
You know, we showed spheres earlier, they're nice and simple.

498
00:37:29,000 --> 00:37:32,000
Subdivision surfaces, you know, whatever you like, implicit surfaces.

499
00:37:32,000 --> 00:37:36,000
There's a bunch of object intersections out, you know, that you could do.

500
00:37:36,000 --> 00:37:43,000
But realistically, like for games, which NVIDIA certainly points at, they've traditionally used triangles for everything.

501
00:37:43,000 --> 00:37:45,000
You know, you turn it all into triangles eventually.

502
00:37:45,000 --> 00:37:54,000
And so, indeed, we have a particular ray intersection triangle, ray triangle intersection rather, that's just super fast and optimized for hardware.

503
00:37:54,000 --> 00:38:00,000
And then there's just this idea of instancing, that you can make lots of copies of the money and it can keep track of that, essentially.

504
00:38:00,000 --> 00:38:05,000
It can understand how those objects get shared so that they're not taking up so much memory.

505
00:38:06,000 --> 00:38:14,000
And then you come back to the shaders, which NVIDIA calls stream multiprocessors, SMs, if you ever look at NVIDIA literature.

506
00:38:14,000 --> 00:38:16,000
And those are more like general processors.

507
00:38:16,000 --> 00:38:24,000
And so they do other things like instancing or intersection or, you know, like they can do ray sphere or whatever, and traditional shading and so on.

508
00:38:24,000 --> 00:38:29,000
So just to give you a flavor, there's five kinds of ray tracing shaders.

509
00:38:30,000 --> 00:38:40,000
So if you start actually trying to write a ray tracer or look at ray tracing code written for Vulkan or any kind of other API DirectX, you'll see these kinds of five shaders.

510
00:38:40,000 --> 00:38:46,000
There's the ray generation shader, which is just sort of, it's called trace ray.

511
00:38:46,000 --> 00:38:48,000
It's the one that's kind of in control of the ray.

512
00:38:48,000 --> 00:38:51,000
It starts the ray out and sort of says what do you want to do with the ray and so on.

513
00:38:51,000 --> 00:39:00,000
There's intersection shaders, which, like I say, you have the built-in one that's for triangles or you have the, you know, make your own, roll your own.

514
00:39:00,000 --> 00:39:04,000
And then there's these last three, which are sort of a group.

515
00:39:04,000 --> 00:39:07,000
And I'll just show the groups, in fact.

516
00:39:07,000 --> 00:39:13,000
There's miss shaders, which is like, well, if the ray goes through the whole intersection structure and misses everything, what do you do?

517
00:39:13,000 --> 00:39:17,000
Closest hit shaders, in other words, you hit something with your ray, what do you do?

518
00:39:17,000 --> 00:39:20,000
And then there's any hit shaders, which I'll talk about more in a minute.

519
00:39:20,000 --> 00:39:22,000
That's a special kind.

520
00:39:22,000 --> 00:39:24,000
So how do these fit together?

521
00:39:24,000 --> 00:39:28,000
Well, there's sort of this whole, you can look at this complicated flowchart kind of thing.

522
00:39:28,000 --> 00:39:31,000
But here's an easier one, just to get a flavor.

523
00:39:31,000 --> 00:39:39,000
And it's really just sort of saying what I said before, but just at least you can kind of look at this without getting too distracted by bounded boxes and whatnot.

524
00:39:39,000 --> 00:39:41,000
Which is just simply, you have a ray, starts on the left.

525
00:39:41,000 --> 00:39:44,000
You say, okay, shoot that ray into the scene.

526
00:39:44,000 --> 00:39:47,000
So that's going to go through that acceleration traversal, ray tracing core.

527
00:39:47,000 --> 00:39:54,000
And, you know, if the ray basically gets down to a box and says, oh, okay, there's something in this box.

528
00:39:54,000 --> 00:39:59,000
You know, if it's a triangle, we can stay in hardware that's specific in that RT core.

529
00:39:59,000 --> 00:40:02,000
But one way or the other, we're basically doing an intersection shader.

530
00:40:02,000 --> 00:40:04,000
We're saying, well, did I hit that object or not?

531
00:40:04,000 --> 00:40:11,000
And then maybe we use this thing called the any hit shader, which, again, is mysterious at this moment, but won't be in a minute or two.

532
00:40:12,000 --> 00:40:16,000
But, you know, we go through this loop, basically, continuing to say, oh, no, no, I missed.

533
00:40:16,000 --> 00:40:17,000
Okay, next object.

534
00:40:17,000 --> 00:40:18,000
Okay, I missed.

535
00:40:18,000 --> 00:40:19,000
Next, next, next.

536
00:40:19,000 --> 00:40:22,000
And either I hit an object or I get through the whole traversal.

537
00:40:22,000 --> 00:40:24,000
If I hit an object, I do a closest hit shader.

538
00:40:24,000 --> 00:40:26,000
If I miss, I do a miss shader.

539
00:40:26,000 --> 00:40:28,000
And then I return from trace ray.

540
00:40:28,000 --> 00:40:37,000
But this closest hit shader can also spawn rays, which then go and, you know, go back to this process again, the acceleration traversal.

541
00:40:37,000 --> 00:40:39,000
And that's it in a nutshell, basically.

542
00:40:39,000 --> 00:40:41,000
That's how the hardware works.

543
00:40:41,000 --> 00:40:44,000
So what's the deal with the any hit shader?

544
00:40:44,000 --> 00:40:46,000
Well, there's this idea of cutouts.

545
00:40:46,000 --> 00:40:49,000
And these actually turn out to be fairly significant.

546
00:40:49,000 --> 00:40:54,000
Like I was reading a thing a year or two ago from Call of Duty guys, the guys who were doing Call of Duty.

547
00:40:54,000 --> 00:41:01,000
And they said, boy, if we can just feed up one thing, it would be, you know, for rays hitting vegetation.

548
00:41:01,000 --> 00:41:04,000
So like in this scene, there's some vegetation.

549
00:41:04,000 --> 00:41:07,000
This is a pretty elaborate scene, but it can be done in real time.

550
00:41:07,000 --> 00:41:11,000
And, you know, if there was lots of vegetation, though, it could slow down.

551
00:41:11,000 --> 00:41:28,000
The trick with vegetation is we use a trick, you know, at least in the games industry, they use this trick a lot, which is instead of actually making a, you know, you could make this thing, this leaf out of maybe hundreds of triangles to make sure you got the nice leaf shape and all that kind of stuff.

552
00:41:28,000 --> 00:41:30,000
But instead, we usually make it out of two triangles.

553
00:41:31,000 --> 00:41:32,000
Out of two triangles.

554
00:41:32,000 --> 00:41:38,000
And we basically apply a texture to it that has an alpha channel, a transparency channel.

555
00:41:38,000 --> 00:41:41,000
So either a pixel's visible or it's not visible.

556
00:41:41,000 --> 00:41:44,000
So these areas out here are just where it's actually transparent.

557
00:41:44,000 --> 00:41:50,000
So what the anti-edge shader does is you're going through your acceleration structure and you hit something.

558
00:41:50,000 --> 00:41:51,000
You say, oh, I hit this leaf.

559
00:41:51,000 --> 00:41:53,000
And the intersector says, oh, leaf.

560
00:41:53,000 --> 00:41:54,000
Oh, oh, wait.

561
00:41:54,000 --> 00:41:55,000
Yeah, I've looked up.

562
00:41:55,000 --> 00:41:56,000
I've hit the leaf.

563
00:41:56,000 --> 00:41:57,000
I've hit one of these two triangles.

564
00:41:57,000 --> 00:42:00,000
But I don't know if I've actually hit the leaf or if the ratio continued.

565
00:42:00,000 --> 00:42:02,000
So that's where the anti-edge shader comes into play.

566
00:42:02,000 --> 00:42:06,000
And what the anti-edge shader does is it basically goes, oh, okay, just a minute.

567
00:42:06,000 --> 00:42:08,000
Let me flick through the book here.

568
00:42:08,000 --> 00:42:09,000
Oh, here's the texture.

569
00:42:09,000 --> 00:42:10,000
Okay, let me look up the pixel.

570
00:42:10,000 --> 00:42:13,000
Oh, oh, you hit, you know, congratulations, you hit a leaf.

571
00:42:13,000 --> 00:42:14,000
Or, oh, you missed.

572
00:42:14,000 --> 00:42:16,000
Oh, the ratio continued.

573
00:42:16,000 --> 00:42:23,000
And that process turns out to be rather slow because this anti-edge shader is done outside of the hardware.

574
00:42:23,000 --> 00:42:25,000
It's done out of, well, I shouldn't say, everything's in the hardware, right?

575
00:42:25,000 --> 00:42:26,000
It's all in the GPU.

576
00:42:26,000 --> 00:42:28,000
It's done outside of these ray-tracing cores.

577
00:42:28,000 --> 00:42:33,000
The ray-tracing cores kind of do this intersection and acceleration traversal.

578
00:42:33,000 --> 00:42:40,000
But the anti-edge is actually in this sort of SM, in that streaming multiprocessor in the general shader.

579
00:42:40,000 --> 00:42:43,000
And so there's sort of this whole communication thing where it has to go to the shader.

580
00:42:43,000 --> 00:42:45,000
The shader does its thing.

581
00:42:45,000 --> 00:42:46,000
It comes back eventually.

582
00:42:46,000 --> 00:42:50,000
And it says, oh, start up the ray again, you know.

583
00:42:50,000 --> 00:42:51,000
So that's a very slow process.

584
00:42:51,000 --> 00:43:05,000
So one thing that we've addressed just, you know, announced in these past few weeks is this idea of opacity masks where we don't, we can do it down, I think, to the, I don't know, maybe do it down to the pixel level.

585
00:43:05,000 --> 00:43:14,000
But basically what we do is we have a very tight encoding compressed version of that texture that our ray-tracing cores now understand.

586
00:43:14,000 --> 00:43:24,000
That basically you say, hey, instead of going to the any hit shader and having to slow down, we have this sort of very, you know, tightly compressed, not quite binary.

587
00:43:24,000 --> 00:43:36,000
I think there's three states or four, depending on how you configure things, that basically say, you know, either when I hit something, I can just immediately look up, is it transparent or is it opaque or is it somewhere in between?

588
00:43:36,000 --> 00:43:40,000
In which case, at some point, you may have to go to the end hit shader anyway.

589
00:43:40,000 --> 00:43:46,000
But you can see there's sort of vast areas that are either opaque or, you know, something, you know, empty.

590
00:43:46,000 --> 00:43:49,000
And so that can speed this up considerably.

591
00:43:49,000 --> 00:43:58,000
So that's one area where we've thrown a little more hardware, basically, to try to speed up that process because that turned out to be a pain point for a lot of AAA games.

592
00:43:59,000 --> 00:44:13,000
Another thing is, so Unreal Engine has this whole nanite idea of level of detail that as you get closer to things, they pull in new level of detail and try to, you know, quietly merge it so you don't really notice the difference in detail.

593
00:44:13,000 --> 00:44:19,000
But you can see here, like on the left in particular, there's sort of just still a ton of little triangles.

594
00:44:19,000 --> 00:44:31,000
There's, you know, at some point, you've got maybe, you know, little lion's heads or whatever, you know, you've got some very detailed content that you want to try to keep at some kind of level of detail.

595
00:44:31,000 --> 00:44:40,000
And so one thing we've added this time around is this idea of a micromesh, which is basically saying, given a triangle, you can make a bunch of little triangles.

596
00:44:41,000 --> 00:44:52,000
So you could have something like this crab, where, you know, you may have a bunch of crabs and you have, you know, 16k micromeshes, in other words, 16,000 triangles expand to 2 million microtriangles.

597
00:44:52,000 --> 00:45:03,000
And there's hardware that's just there to, you know, very rapidly shoot rays at these microtriangles and also to keep them nice and compressed, like, so that it's not taking up a ton of room.

598
00:45:03,000 --> 00:45:08,000
So anyway, that's another thing that's just come out, just announced in the past few weeks.

599
00:45:08,000 --> 00:45:14,000
And the last one I won't really go deeply into, but it's this interesting idea that it's called shader execution reordering.

600
00:45:14,000 --> 00:45:24,000
And it kind of just happens, it's now a new unit of the ray tracing core, because the realization is that, like I say, I won't get into it.

601
00:45:25,000 --> 00:45:35,000
But basically, those streaming multiprocessors, those shaders, the way they kind of work is they're not like a single processor per ray.

602
00:45:35,000 --> 00:45:41,000
It's really a single processor per what's called a warp, which is like 32 rays at once.

603
00:45:41,000 --> 00:45:44,000
And so you're sort of evaluating 32 rays at once.

604
00:45:44,000 --> 00:45:49,000
And what they found is that if you can bunch these nicely, they work well.

605
00:45:49,000 --> 00:45:51,000
So like you're just shooting rays from the eye, no problem.

606
00:45:51,000 --> 00:45:55,000
But typically, games are kind of doing that by using rasterization for that.

607
00:45:55,000 --> 00:45:58,000
And then they're shooting like shadow rays or reflection rays or whatever.

608
00:45:58,000 --> 00:46:00,000
And the rays kind of diverge.

609
00:46:00,000 --> 00:46:02,000
They kind of go off in different directions.

610
00:46:02,000 --> 00:46:05,000
They, you know, they're basically quite different.

611
00:46:05,000 --> 00:46:11,000
And that kind of, that can create a slowdown as far as these 32 rays at once works.

612
00:46:11,000 --> 00:46:14,000
And so there's sort of this, now this sorting unit, basically.

613
00:46:14,000 --> 00:46:16,000
It says, oh, let's try to order those as best we can.

614
00:46:16,000 --> 00:46:18,000
Let's try to group things.

615
00:46:18,000 --> 00:46:23,000
And so the sorting can give you higher performance, sometimes much higher performance.

616
00:46:23,000 --> 00:46:27,000
And it's just kind of in the chip now, basically, is the idea.

617
00:46:27,000 --> 00:46:32,000
You know, in software, you can sort of try to do some of this ordering if you're clever about things.

618
00:46:32,000 --> 00:46:36,000
But, you know, it now has some hardware support for that.

619
00:46:37,000 --> 00:46:43,000
So back in 1987, I had been out of school.

620
00:46:43,000 --> 00:46:45,000
And I was working for a company.

621
00:46:45,000 --> 00:46:50,000
And I put out a little database of like this fractal sphere thing on the right, which I call SphereFlake.

622
00:46:50,000 --> 00:46:53,000
And I put it out about two weeks before SIGGRAPH.

623
00:46:53,000 --> 00:46:55,000
I'm like, yeah, I'll just put the code out there for free.

624
00:46:55,000 --> 00:46:57,000
You know, maybe someone will use it.

625
00:46:57,000 --> 00:47:04,000
And so I was surprised and happy to go to SIGGRAPH and see this thing called AT&T Pixel Machine announced.

626
00:47:04,000 --> 00:47:07,000
It was sort of the first real-time ray tracer.

627
00:47:07,000 --> 00:47:10,000
And it couldn't do this SphereFlake in real time.

628
00:47:10,000 --> 00:47:15,000
It took, you know, for 512 by 512 pixels, about 7,000 spheres, it took about 30 seconds.

629
00:47:15,000 --> 00:47:22,000
But still, like, super impressive because it would take me hours on my, you know, workstation at the time, my high-end workstation.

630
00:47:22,000 --> 00:47:26,000
And they actually had an interactive thing where you can move the mouse around.

631
00:47:26,000 --> 00:47:29,000
And there'd be this one ray-traced sphere on a plane.

632
00:47:29,000 --> 00:47:31,000
And you'd be like, oh, my gosh, this is amazing.

633
00:47:31,000 --> 00:47:34,000
You know, now you can do this on your phone, no problem.

634
00:47:34,000 --> 00:47:36,000
But at the time, it was just magic.

635
00:47:36,000 --> 00:47:40,000
Anyway, so, you know, fast forward a bunch of years.

636
00:47:40,000 --> 00:47:46,000
And when I first joined NVIDIA, one of the first things I did was like, oh, man, give me one of them cards, you know.

637
00:47:46,000 --> 00:47:50,000
And, you know, give me some code to do some ray tracing.

638
00:47:50,000 --> 00:47:55,000
And so I did the SphereFlake at 48 million spheres, you know, higher resolution.

639
00:47:55,000 --> 00:47:59,000
And was, you know, pretty easily getting 60 frames per second.

640
00:47:59,000 --> 00:48:05,000
You know, it was just like, and I could probably have kicked it further by doing instancing so I'd touch less memory.

641
00:48:05,000 --> 00:48:06,000
But I never bothered.

642
00:48:06,000 --> 00:48:08,000
You know, that was plenty good enough for me.

643
00:48:08,000 --> 00:48:11,000
48 million is more than you can possibly see.

644
00:48:11,000 --> 00:48:14,000
You know, that's way more than the 2 million pixels I'm seeing.

645
00:48:14,000 --> 00:48:18,000
So anyway, that's, you know, that's not even accelerated spheres.

646
00:48:18,000 --> 00:48:20,000
The spheres are special custom intersectors.

647
00:48:20,000 --> 00:48:22,000
So that's the slow path.

648
00:48:23,000 --> 00:48:28,000
And what's cool, anyway, for me about ray tracing was I realized when I had that demo, it was like, oh, yeah.

649
00:48:28,000 --> 00:48:29,000
Like, I want to add soft shadows.

650
00:48:29,000 --> 00:48:34,000
Well, if you add soft shadows and rasterizers, that can be really slow.

651
00:48:34,000 --> 00:48:39,000
Like, oh, okay, well, do this sort of funky thing with my shadow map.

652
00:48:39,000 --> 00:48:43,000
And, you know, yeah, I'll do some tricky filtering kinds of things.

653
00:48:43,000 --> 00:48:49,000
But ray tracing, you just go, well, just, you know, shoot the shadow rays over, you know, half a degree or whatever.

654
00:48:49,000 --> 00:48:51,000
And, you know, add them up.

655
00:48:51,000 --> 00:48:54,000
You could, you know, keep it a softer shadow like here.

656
00:48:55,000 --> 00:48:59,000
You can get a hemisphere kind of a pattern by just shooting them all over the whole hemisphere.

657
00:48:59,000 --> 00:49:02,000
And that was like, you know, 20 minutes of coding, literally.

658
00:49:02,000 --> 00:49:06,000
You know, the hardest part was going, oh, yeah, how do I shoot rays randomly over an atmosphere?

659
00:49:06,000 --> 00:49:07,000
I've got to look that up.

660
00:49:07,000 --> 00:49:11,000
But once I had that, it's like, you know, 20 lines, 10 lines of code, and boom.

661
00:49:11,000 --> 00:49:13,000
You basically have a new shading algorithm.

662
00:49:13,000 --> 00:49:16,000
And you could add depth of field very easily and so on.

663
00:49:16,000 --> 00:49:17,000
These are all just easy things.

664
00:49:17,000 --> 00:49:23,000
So that's one thing I really like about ray tracing is that since it has sort of a basis on, like, here's how light kind of actually works.

665
00:49:24,000 --> 00:49:32,000
You know, you can quickly add and play with new ideas fairly rapidly without having to sort of force hardware to do weird things.

666
00:49:33,000 --> 00:49:39,000
So one thing I'm going to talk about for about 28 seconds is the rendering equation.

667
00:49:39,000 --> 00:49:43,000
Like, it's the kiss of death to, like, show an equation in any lecture I found.

668
00:49:43,000 --> 00:49:47,000
But I'm going to risk it, give this one a very quick one.

669
00:49:47,000 --> 00:49:49,000
And it's not a rendering equation.

670
00:49:49,000 --> 00:49:54,000
This is the rendering equation, which is that one from Kajiya back in 1986.

671
00:49:54,000 --> 00:49:57,000
And the idea is very simple and worth mentioning.

672
00:49:57,000 --> 00:50:00,000
It's just because it's kind of what path tracing is all about.

673
00:50:00,000 --> 00:50:08,000
It's why we kind of, you know, came up with path tracing is that you say, well, how much light do I have given some position x and given some direction?

674
00:50:09,000 --> 00:50:11,000
Well, okay, that would be the incoming light.

675
00:50:11,000 --> 00:50:18,000
Like, you can just say, well, you know, given if there's an emitted light right at, if I'm staring at a light, okay, I know how much light I'm getting.

676
00:50:18,000 --> 00:50:20,000
I'm getting the light from the emitter.

677
00:50:20,000 --> 00:50:25,000
But what you usually have to do is, you know, have some material looking at here.

678
00:50:25,000 --> 00:50:32,000
And what you want to do is you have this, you know, sort of sum of this, integrate all the light coming in from all the different directions.

679
00:50:32,000 --> 00:50:40,000
And then you have this sort of geometric term because sort of light coming in directly overhead from a surface versus light coming in from an angle.

680
00:50:40,000 --> 00:50:46,000
Well, there's sort of just geometrically, there's kind of less light, you know, shining at an angle.

681
00:50:46,000 --> 00:50:52,000
Like if you hold a flashlight at an angle to a surface, it will not be as bright as if you hold it way overhead, as we know.

682
00:50:52,000 --> 00:50:54,000
And so that's all this lab return is.

683
00:50:54,000 --> 00:51:00,000
And then you have basically this material, which just says, given an incoming amount of light, what's the outgoing amount of light?

684
00:51:00,000 --> 00:51:04,000
In other words, how much does it reflect in, you know, per wavelength kind of thing.

685
00:51:05,000 --> 00:51:10,000
And so you basically just do an integration and, you know, voila, you have the answer.

686
00:51:10,000 --> 00:51:14,000
But, of course, this incoming light, well, that just depends on where the light came from.

687
00:51:14,000 --> 00:51:16,000
And the light may have come from some other surface.

688
00:51:16,000 --> 00:51:20,000
So, again, when you go to that other surface, you shot a ray and, oh, I hit another surface.

689
00:51:20,000 --> 00:51:24,000
Well, you, again, have to do this equation again for that other surface.

690
00:51:24,000 --> 00:51:32,000
And that's basically the path trace idea is that you're kind of, you know, recursively solving this equation again and again and again as you go down the path.

691
00:51:32,000 --> 00:51:35,000
But it's sort of, you know, it's just that simple.

692
00:51:35,000 --> 00:51:41,000
And really a lot of work is just based on a lot of ray tracing research is, you know, how do we speed this up?

693
00:51:41,000 --> 00:51:43,000
Like, what's significant as far as incoming light?

694
00:51:43,000 --> 00:51:46,000
What's significant when we know the material?

695
00:51:46,000 --> 00:51:47,000
And so on and so forth.

696
00:51:51,000 --> 00:51:54,000
So one path trace game, in fact, is Quake 2.

697
00:51:54,000 --> 00:51:56,000
It's kind of fun. It's old by now.

698
00:51:56,000 --> 00:51:58,000
But anyway, it's kind of cool to take Quake 2.

699
00:51:58,000 --> 00:52:01,000
And they just said, hey, let's just make it path traced.

700
00:52:01,000 --> 00:52:03,000
You know, we're going to add this cool thing.

701
00:52:03,000 --> 00:52:05,000
You know, the initial implementation is open source.

702
00:52:05,000 --> 00:52:08,000
I think NVIDIA has a cooler, faster implementation.

703
00:52:08,000 --> 00:52:11,000
But it's kind of fun to just walk through and see some of the effects.

704
00:52:13,000 --> 00:52:19,000
And so if you think about that rendering equation, like I said, you can sort of pay attention to the material.

705
00:52:19,000 --> 00:52:28,000
So if you have, if you know, like, you've got a, you know, classic mirror, you know, classical ray tracing, the only important direction to that mirror is the mirror direction.

706
00:52:28,000 --> 00:52:30,000
You know, if you have a light overhead, I don't care.

707
00:52:30,000 --> 00:52:32,000
I'm not seeing that light in my mirror.

708
00:52:32,000 --> 00:52:35,000
You know, the light's not reflecting back towards my eye.

709
00:52:35,000 --> 00:52:37,000
It's only, you know, it's the light's directly overhead.

710
00:52:37,000 --> 00:52:40,000
It's reflecting directly back up from the mirror.

711
00:52:40,000 --> 00:52:42,000
So it doesn't affect what the eye sees.

712
00:52:42,000 --> 00:52:47,000
But if the surface is glossy, well, now I'm going to have to start shooting, you know, a bunch of rays, a burst of rays.

713
00:52:47,000 --> 00:52:50,000
And then if it's diffuse, now I'm sort of shooting in all kinds of different directions.

714
00:52:50,000 --> 00:52:55,000
And I don't really, you know, know what good direction is what as far as the material goes.

715
00:52:55,000 --> 00:53:01,000
So there's this idea called MIS, multiple importance sampling.

716
00:53:01,000 --> 00:53:07,000
And what the idea there is, is you sort of say, well, you know, it's all very well that the diffuse surface, we don't know which direction is important.

717
00:53:07,000 --> 00:53:09,000
But we do know lights are really important.

718
00:53:09,000 --> 00:53:14,000
You know, if you directly see a light, that's going to have a big influence, most likely on the scene.

719
00:53:14,000 --> 00:53:20,000
So what you do is you tend to shoot more rays, essentially shoot shadow rays towards the lights in the scene.

720
00:53:20,000 --> 00:53:23,000
And so this is an old technique.

721
00:53:23,000 --> 00:53:25,000
It's from 1995.

722
00:53:25,000 --> 00:53:31,000
But it's really a good one to sort of, if you want to think about sampling and the rendering equation and what works and so on.

723
00:53:31,000 --> 00:53:36,000
I like just kind of staring at this thing for 10 or 15 or however many minutes it makes sense to you.

724
00:53:36,000 --> 00:53:40,000
Like, you know, well, okay, here I'm sampling light source.

725
00:53:40,000 --> 00:53:49,000
And it's looking pretty good on the left here for, you know, this diffuse surface where I indeed know that, you know, sampling on the light is going to be really important.

726
00:53:49,000 --> 00:53:53,000
But I know that over here at the top is a shiny surface.

727
00:53:53,000 --> 00:53:58,000
And, gee, that's not so great just, you know, trying to sample light source is kind of weird.

728
00:53:58,000 --> 00:54:01,000
This isn't even totally reflected at the top here.

729
00:54:01,000 --> 00:54:02,000
It's just glossy.

730
00:54:02,000 --> 00:54:16,000
Anyway, the point is, you know, if you sort of stare at each one of these and think about what's it mean, that you realize that, oh, yeah, trying to do a mix of these two where the light matters and the material matters to get a good image.

731
00:54:17,000 --> 00:54:26,000
But the point of all this in a way is that you can see in that previous slide that there were a lot of, there's a lot of noise, you know, a lot of this kind of speckly stuff going on.

732
00:54:26,000 --> 00:54:35,000
So if you shoot just one sample per pixel, you get this very speckly kind of stuff where it's like sometimes, oh, I hit and I hit a light, you know, sometimes, no, you know, I didn't get much light, whatever.

733
00:54:35,000 --> 00:54:38,000
And so you get this very noisy kind of thing.

734
00:54:38,000 --> 00:54:41,000
If you shoot more rays, you get better and better and better.

735
00:54:41,000 --> 00:54:56,000
But the trick is, like many things in life, like many kinds of sampling, is a diminished return, a diminishing return where basically the square root of the number of samples is how much quality kind of improves.

736
00:54:56,000 --> 00:54:58,000
That's kind of the rule.

737
00:54:58,000 --> 00:55:04,000
So, you know, four samples per pixel took me four times longer, but it's only sort of twice as good.

738
00:55:04,000 --> 00:55:08,000
And so this diminishing return really is not a good thing.

739
00:55:08,000 --> 00:55:13,000
You know, we wish it was just one for one, every ray we shot was, you know, made it, you know, that much better.

740
00:55:13,000 --> 00:55:15,000
But that's not the case.

741
00:55:15,000 --> 00:55:23,000
So that kind of puts an upper limit on, you know, how much you can kind of get out of rays in a real time environment.

742
00:55:23,000 --> 00:55:32,000
And so, or even in a film environment, sometimes they'll have this problem too, where they just don't have enough samples, even with a, you know, 3000 per pixel, you can still get noisy results.

743
00:55:32,000 --> 00:55:40,000
So the thing we've looked at is how to reconstruct, basically, given a noisy result, you know, how do you get a nice image like here on the right?

744
00:55:40,000 --> 00:55:46,000
And the cheat is to use deep learning to do image denoising.

745
00:55:46,000 --> 00:55:48,000
Image denoising is an old idea.

746
00:55:48,000 --> 00:55:53,000
You know, it's basically there's sort of a lot of heuristic rules that humans can apply.

747
00:55:54,000 --> 00:56:03,000
But at this point, I think the machines are winning, essentially, like, you know, human made denoisers, you can try to glue up raised denoisers, and sometimes they'll work and sometimes they won't.

748
00:56:03,000 --> 00:56:13,000
But really, now we just sort of brute force it, we throw lots of images at the neural net, essentially, and we train this neural net by saying, well, here's the noisy image.

749
00:56:13,000 --> 00:56:15,000
And here's the result that I really want.

750
00:56:15,000 --> 00:56:18,000
I have now a really nice image here, and a crummy image here.

751
00:56:18,000 --> 00:56:22,000
And there's even tricks for doing that very rapidly generate those images.

752
00:56:22,000 --> 00:56:34,000
But you put those both in and basically try to train, you know, here neural net, if you see this noise, you see this high frequency jump, we probably don't want that, you know, come up with something else.

753
00:56:34,000 --> 00:56:37,000
And we train to have that happen, essentially.

754
00:56:37,000 --> 00:56:39,000
And so this works surprisingly well.

755
00:56:39,000 --> 00:56:43,000
Like, so here's one sample per pixel they trace.

756
00:56:44,000 --> 00:56:52,000
Here's a denoise. And the reason it's so noisy here is that, you know, you have a bunch of rays, they're going towards the sun, which has a maybe a half a degree angle in the sky.

757
00:56:52,000 --> 00:56:55,000
So they're going to different points because they want to get a soft shadow.

758
00:56:55,000 --> 00:57:00,000
But they're also sometimes hitting leaves, sometimes not hitting leaves, and so that causes a lot of noise.

759
00:57:00,000 --> 00:57:02,000
And so the denoise looks pretty good.

760
00:57:02,000 --> 00:57:05,000
And it also compares quite nicely, actually, with the ground truth.

761
00:57:05,000 --> 00:57:11,000
This is one where they shot lots of rays per pixel and got the, you know, the essentially correct answer.

762
00:57:11,000 --> 00:57:19,000
And you can compare that to like traditional methods of rasterization called shadow mapping, this sort of common one used in a lot of games, still used.

763
00:57:19,000 --> 00:57:24,000
But there you get sort of a very sharp kind of a shadow just because it's not really based on physical principles.

764
00:57:24,000 --> 00:57:30,000
They're just kind of doing buffer hacks, basically, you can't get the same effect.

765
00:57:30,000 --> 00:57:40,000
Here again, you have this sort of one sample per pixel, which you bounce around, retrace reflections, denoising looks pretty good.

766
00:57:40,000 --> 00:57:45,000
Here there's sort of a fair bit of difference between the ground truth and the one sample.

767
00:57:45,000 --> 00:57:51,000
But, you know, comparable, you know, you might see like on the left hand here, it's a little sharper, maybe with the ground truth.

768
00:57:51,000 --> 00:57:56,000
But anyway, but, you know, given that it's only one sample, it's pretty nice.

769
00:57:56,000 --> 00:58:05,000
And that compares quite favorably with the stochastic screen space reflections, which is sort of the way that people did it before having ray tracing,

770
00:58:05,000 --> 00:58:14,000
is that you have this sort of, you take the image and you kind of reflect it off the plane in this kind of funky algorithm, basically,

771
00:58:14,000 --> 00:58:16,000
where you're using the image and you're reflecting.

772
00:58:16,000 --> 00:58:22,000
And you can see like, at the bottoms of these little objects, we don't have any reflection there.

773
00:58:22,000 --> 00:58:25,000
So it just sort of turns kind of weird.

774
00:58:25,000 --> 00:58:29,000
But anyway, so the point is, is that, yeah, this works better.

775
00:58:29,000 --> 00:58:32,000
Again, one more example is that scene we saw earlier.

776
00:58:32,000 --> 00:58:34,000
One sample ray trace global illumination.

777
00:58:34,000 --> 00:58:36,000
Here's the denoise version.

778
00:58:36,000 --> 00:58:40,000
And again, compares favorably with the ground truth.

779
00:58:40,000 --> 00:58:47,000
Between the two, you can sort of see in the upper left, you know, we're losing some of the detail by having this sort of simplified things.

780
00:58:47,000 --> 00:58:50,000
But, you know, a lot cheaper.

781
00:58:50,000 --> 00:58:58,000
We can also have this idea of just, it's called deep learning supersampling, where supersampling is just saying, I want more samples in the pixel.

782
00:58:59,000 --> 00:59:07,000
And this can be used for ray tracing or for rasterization or for, you know, really anything where you're not getting as much detail as you'd like in a pixel.

783
00:59:07,000 --> 00:59:12,000
And, you know, again, what you've done is basically said, well, I've gotten these samples.

784
00:59:12,000 --> 00:59:15,000
And, you know, I've only got one sample per pixel here.

785
00:59:15,000 --> 00:59:17,000
I wasn't able to get more than that.

786
00:59:17,000 --> 00:59:19,000
What can you do for me?

787
00:59:19,000 --> 00:59:25,000
And if you turn on DLSS, it often will just rebuild it, you know, amazingly well, actually.

788
00:59:25,000 --> 00:59:27,000
You know, occasionally you'll see errors and so on.

789
00:59:27,000 --> 00:59:29,000
But for the most part, it looks pretty good.

790
00:59:29,000 --> 00:59:33,000
Because it's just trying to sort of, you know, say, well, I've seen lots and lots of other images.

791
00:59:33,000 --> 00:59:37,000
And this is sort of what, you know, when I've seen this, it really means this.

792
00:59:37,000 --> 00:59:45,000
And so the thing we've come up with in the past few weeks was just announced was this supersampling three, which I won't really get into.

793
00:59:45,000 --> 00:59:51,000
It's sort of the piece that we've added is this chunk down here using optical flow.

794
00:59:51,000 --> 00:59:55,000
And basically the idea is it's sort of a funky idea.

795
00:59:55,000 --> 00:59:59,000
It's like saying, well, I want more frames per second because I want a smoother user experience.

796
00:59:59,000 --> 01:00:02,000
You know, people love, you know, 30 frames per second.

797
01:00:02,000 --> 01:00:04,000
A lot of people object to even 60 frames a second.

798
01:00:04,000 --> 01:00:06,000
People don't like so much.

799
01:00:06,000 --> 01:00:08,000
If you can get higher than that, you know, it just looks smoother.

800
01:00:08,000 --> 01:00:10,000
It just feels better to them.

801
01:00:10,000 --> 01:00:13,000
And so this actually is a way to sort of kick up the frame rate.

802
01:00:13,000 --> 01:00:15,000
It's funny, though.

803
01:00:15,000 --> 01:00:16,000
I won't get into it.

804
01:00:16,000 --> 01:00:18,000
But it doesn't really decrease the latency per se.

805
01:00:19,000 --> 01:00:24,000
But there's another thing called NVIDIA Reflex, if you're interested, that does decrease the latency.

806
01:00:24,000 --> 01:00:31,000
And so this is actually kind of ‑‑ it's basically just creating intermediate frames with not using any kind of renderer or anything.

807
01:00:31,000 --> 01:00:33,000
It's just sort of saying I've got this frame at time A.

808
01:00:33,000 --> 01:00:35,000
I've got this frame at time B.

809
01:00:35,000 --> 01:00:41,000
I want to create a frame in between at time, you know, half between A and B that I can throw up on the screen really quick.

810
01:00:41,000 --> 01:00:46,000
I can, you know, I can generate quick and I can throw on quick so that I'm not losing much frame rate.

811
01:00:46,000 --> 01:00:53,000
But because of that, you know, generation time, that I'm able to get, you know, twice as many frames essentially on the screen.

812
01:00:53,000 --> 01:01:00,000
So this is sort of the marketing slide is that you can turn this on, get comparable frames, and you get a lot more frames per second.

813
01:01:00,000 --> 01:01:08,000
So the other thing, like I say, that NVIDIA works on is software that we release as SDKs.

814
01:01:08,000 --> 01:01:16,000
And so there's things like RTXVI, which is direct illumination, which is, you know, the research name is called ReSTIR.

815
01:01:16,000 --> 01:01:22,000
And basically the idea is you're just trying to find the important lights in the scene and use them to shade things.

816
01:01:22,000 --> 01:01:28,000
So here we have these tiny little, you know, little lights and not much effect really on the scene.

817
01:01:28,000 --> 01:01:31,000
Here we're sort of seeing, you know, hey, gee, these lights are significant.

818
01:01:31,000 --> 01:01:38,000
And the idea is you're sort of trying to track what lights are significant for various pixels and try to, you know,

819
01:01:38,000 --> 01:01:43,000
try to gain information from both the neighboring pixels and from the frames that have happened previously

820
01:01:43,000 --> 01:01:50,000
to try to zero in on the useful lights to render, you know, shoot rays towards.

821
01:01:50,000 --> 01:01:57,000
And you can also do like ReSTIR plus denoise. So you can get these sort of, you know, good ReSTIR effects.

822
01:01:57,000 --> 01:02:02,000
But if you add, you know, denoising to them, you get, you know, nicer effects.

823
01:02:02,000 --> 01:02:05,000
So these things tend to have, you know, sort of a synergy to them.

824
01:02:10,000 --> 01:02:15,000
And the other one that I'll mention just again, again, extremely briefly, get the slides if you want to look up.

825
01:02:15,000 --> 01:02:19,000
I've got URLs of some of the research involved.

826
01:02:19,000 --> 01:02:23,000
But it's this idea of having probes, which are just sort of areas.

827
01:02:23,000 --> 01:02:26,000
You think of them as little, think of a box in space.

828
01:02:26,000 --> 01:02:30,000
And you say, in this box in space, you know, what light's getting to me?

829
01:02:30,000 --> 01:02:34,000
And so, well, there's an area, you know, there's a directional dependence, you know, and so on.

830
01:02:34,000 --> 01:02:39,000
And there's an occlusion dependence. If something's blocking you within the box, that could be problematic.

831
01:02:39,000 --> 01:02:43,000
But basically, there's sort of this idea. You can see some games for a long time with this idea of probes.

832
01:02:43,000 --> 01:02:51,000
And we're kind of elaborating on that, making these probes sort of more, yeah, more full flame, more full featured.

833
01:02:51,000 --> 01:02:55,000
And also the ability that you can update them. Like it used to be you just made a bunch of probes.

834
01:02:55,000 --> 01:02:57,000
You'd bake overnight, make a bunch of probes.

835
01:02:57,000 --> 01:03:04,000
And you had a global illumination system, but it was just kind of baked in and you couldn't change it over time.

836
01:03:04,000 --> 01:03:10,000
This allows changing, allows objects to move around the scene and affect the global illumination solution and so on.

837
01:03:10,000 --> 01:03:18,000
Anyway, that's just one more SDK that's kind of interesting to look at, or if you want to look at the research for that.

838
01:03:18,000 --> 01:03:23,000
Another area, which I, again, will only spend a few seconds on, but I think it's super interesting because there's also just,

839
01:03:23,000 --> 01:03:28,000
and I'm not the only one, there are literally hundreds of papers in this area now in the past few years,

840
01:03:28,000 --> 01:03:36,000
is the sort of neural radiance caching, where you're kind of using, again, neural nets to try to figure out,

841
01:03:36,000 --> 01:03:42,000
you know, not so much a denoise in some ways, but to sort of figure out, well, where's the useful light, you know, in the scene?

842
01:03:42,000 --> 01:03:45,000
Where should I be looking? What should I be using?

843
01:03:45,000 --> 01:03:51,000
I can't go further than that because, frankly, I can only go a little bit further than that, and we don't have time anyway.

844
01:03:51,000 --> 01:03:56,000
The thing I have been playing with lately, actually, and added one little feature a few weeks ago,

845
01:03:56,000 --> 01:04:02,000
was this thing called Nerfs, which, again, is a super hot topic in the past two years.

846
01:04:02,000 --> 01:04:04,000
And this is a fun thing to play with.

847
01:04:04,000 --> 01:04:10,000
Honestly, you know, if you have an RTX card available, it's actually fun to go grab this stuff, you know, compile it,

848
01:04:10,000 --> 01:04:13,000
which actually compiled, you know, amazingly quickly.

849
01:04:13,000 --> 01:04:16,000
Like, usually whenever I see one of these things, now you just compiled the code.

850
01:04:16,000 --> 01:04:19,000
I go, well, that'll be five hours of my life.

851
01:04:19,000 --> 01:04:23,000
And this one took me, I don't know, 20 minutes or something to get it all compiled and running.

852
01:04:23,000 --> 01:04:25,000
Anyway, it's kind of a fun thing.

853
01:04:25,000 --> 01:04:32,000
The idea of a Nerf is that you're essentially, it's kind of like stereo, it's like photogrammetry,

854
01:04:32,000 --> 01:04:34,000
where you've got lots and lots of views of an object.

855
01:04:35,000 --> 01:04:40,000
But instead of trying to rebuild the mesh and try to get a 3D mesh out of the object that's all textured,

856
01:04:40,000 --> 01:04:45,000
you're both getting a representation of the object, which isn't necessarily a mesh.

857
01:04:45,000 --> 01:04:49,000
And that's, in fact, the whole research topic, is do we do a mesh, or do we do an implicit surface,

858
01:04:49,000 --> 01:04:53,000
or do we do, you know, some kind of voxel implicit surface, or do we do something else?

859
01:04:53,000 --> 01:04:59,000
Or what, you know, what's the best representation for objects in this kind of method?

860
01:04:59,000 --> 01:05:06,000
So the idea is basically, you're throwing this data through a multi-level perceptron,

861
01:05:06,000 --> 01:05:11,000
which is just trying to figure out, you know, given this view, what do I, you know,

862
01:05:11,000 --> 01:05:17,000
given this view and given this location, what would I see in that direction?

863
01:05:17,000 --> 01:05:19,000
And at what opacity?

864
01:05:19,000 --> 01:05:23,000
And so ray tracing is used to rebuild these kinds of images,

865
01:05:23,000 --> 01:05:27,000
and is used to sort of generate some of this data and so on as to analyze this data.

866
01:05:27,000 --> 01:05:31,000
So basically, you just have this idea of a light field, where, you know,

867
01:05:31,000 --> 01:05:35,000
a light field is just saying, given some point in space, and I'm looking in one direction,

868
01:05:35,000 --> 01:05:39,000
what do I see, and how, but it's kind of more of a limited light field,

869
01:05:39,000 --> 01:05:43,000
where it's just like, how, what do I see, and how opaque am I seeing it?

870
01:05:43,000 --> 01:05:46,000
In other words, is there something solid in front of me, or is it kind of fuzzy,

871
01:05:46,000 --> 01:05:48,000
and then I should continue the ray?

872
01:05:48,000 --> 01:05:52,000
Anyway, long and short is, it's a very interesting system.

873
01:05:52,000 --> 01:05:56,000
This system's kind of fun, this particular piece of software.

874
01:05:56,000 --> 01:06:01,000
It's because it resolves very quickly, like this fox head just takes like a minute or less

875
01:06:01,000 --> 01:06:06,000
on a computer to sort of figure out from ground zero from just a bunch of images,

876
01:06:06,000 --> 01:06:10,000
this thing, and, you know, you get these cool images.

877
01:06:10,000 --> 01:06:13,000
It's just, it's tantalizing because it also captures how the light's actually interacting

878
01:06:13,000 --> 01:06:17,000
with the surface, so it's capturing both the material and the material glossiness

879
01:06:17,000 --> 01:06:22,000
and reflection and so on, as opposed to just capturing the model, the mesh.

880
01:06:22,000 --> 01:06:24,000
So it'll be interesting.

881
01:06:24,000 --> 01:06:25,000
Right now it's research, though.

882
01:06:25,000 --> 01:06:29,000
It's not, you know, nobody's commercially doing a lot with this so far.

883
01:06:29,000 --> 01:06:33,000
One thing I had to mention real quick, just because I saw it just today,

884
01:06:33,000 --> 01:06:38,000
was like this thing, Dream Fusion, which is by Google and Berkeley.

885
01:06:38,000 --> 01:06:45,000
They just put this out, I think, a paper on archive on, let's see, September 29th,

886
01:06:45,000 --> 01:06:47,000
so just last week.

887
01:06:47,000 --> 01:06:51,000
And it's this kind of idea where instead of generating 3D models,

888
01:06:51,000 --> 01:06:56,000
you're just using a text-to-3D system like they have this one called Imogen,

889
01:06:56,000 --> 01:06:59,000
which basically you just give it some text, it comes up with a 3D image,

890
01:06:59,000 --> 01:07:03,000
and they say, well, okay, given these 3D images, is there a way that we can kind of

891
01:07:03,000 --> 01:07:07,000
backpropagate, if you know Deep Dream, same kind of idea where you sort of say,

892
01:07:07,000 --> 01:07:09,000
well, here's the image I wanted.

893
01:07:09,000 --> 01:07:12,000
Here's the image I got from just random noise.

894
01:07:12,000 --> 01:07:15,000
How can I sort of influence that random noise to look more and more like the image

895
01:07:15,000 --> 01:07:17,000
that I really want?

896
01:07:17,000 --> 01:07:19,000
And now I do that from a bunch of different angles.

897
01:07:19,000 --> 01:07:23,000
So it's this really weird idea of like, okay, I'm just going to say text,

898
01:07:23,000 --> 01:07:29,000
and I'm going to say what I want, and I will get images from various angles

899
01:07:29,000 --> 01:07:33,000
and so on, and then I'll try to solve to get the underlying earth.

900
01:07:33,000 --> 01:07:38,000
Anyway, it's just this crazy thing, but I love that it's literally like every week

901
01:07:38,000 --> 01:07:41,000
there's a new paper, if not every day, it seems, in this area.

902
01:07:41,000 --> 01:07:44,000
It's just fascinating.

903
01:07:44,000 --> 01:07:49,000
So anyway, just to sort of wrap up what we've gone through.

904
01:07:49,000 --> 01:07:51,000
One is LaFon's Law.

905
01:07:51,000 --> 01:07:54,000
He's Aaron LaFon, was at Intel, now at NVIDIA.

906
01:07:54,000 --> 01:07:57,000
He's been there a bunch of years, one of the heads of research.

907
01:07:57,000 --> 01:08:01,000
And I really like this sort of idea of, you know, well, nowadays we're, you know,

908
01:08:01,000 --> 01:08:04,000
especially with real-time rendering, we're not so much trying to make the picture

909
01:08:04,000 --> 01:08:05,000
with the rendering.

910
01:08:05,000 --> 01:08:08,000
You know, we're not trying to sample the living daylights out of it.

911
01:08:08,000 --> 01:08:12,000
It's to try to get enough samples that the AI can figure out, you know,

912
01:08:12,000 --> 01:08:15,000
how to put it together to make the picture.

913
01:08:15,000 --> 01:08:18,000
And there's sort of a corollary, which is, you know, if your rays are coherent,

914
01:08:18,000 --> 01:08:20,000
you're probably shooting too many rays.

915
01:08:20,000 --> 01:08:23,000
You know, try to make all your rays matter.

916
01:08:23,000 --> 01:08:24,000
So, you know, cherish your samples.

917
01:08:24,000 --> 01:08:30,000
Try to do the most that you can with what you've got.

918
01:08:30,000 --> 01:08:33,000
And then there's sort of finally, you know, the ray-tracing creed

919
01:08:33,000 --> 01:08:35,000
or the rendering creed in general.

920
01:08:35,000 --> 01:08:36,000
It just has to look right, right?

921
01:08:36,000 --> 01:08:38,000
So for rendering, it just has to look right.

922
01:08:38,000 --> 01:08:41,000
You know, we don't have to necessarily, like, physically-based

923
01:08:41,000 --> 01:08:45,000
and physics help us inform us as to how to make things look right.

924
01:08:45,000 --> 01:08:48,000
But, you know, ambient occlusion, for example, looks right,

925
01:08:48,000 --> 01:08:51,000
even though it's not exactly a physical process.

926
01:08:51,000 --> 01:08:54,000
So for rendering, you know, we can get away with this and that.

927
01:08:54,000 --> 01:08:58,000
What I'm going to now really rapidly do, because I've already run out of time,

928
01:08:58,000 --> 01:09:03,000
is just go through some things that I think are interesting ray-tracing uses

929
01:09:03,000 --> 01:09:05,000
beyond rendering.

930
01:09:05,000 --> 01:09:08,000
So ray-tracing, we know it from media and entertainment.

931
01:09:08,000 --> 01:09:12,000
You know, for architectural design, we have, you know, say, dots.

932
01:09:12,000 --> 01:09:16,000
You know, the one on the right in this case is the real one.

933
01:09:16,000 --> 01:09:19,000
But, you know, we can make, you know, quite realistic images.

934
01:09:19,000 --> 01:09:20,000
We can do it for industrial design.

935
01:09:20,000 --> 01:09:23,000
We make pretty cars, you know, shiny cars.

936
01:09:23,000 --> 01:09:28,000
You know, but what happens when, you know, how do I put this?

937
01:09:28,000 --> 01:09:31,000
What happens when buildings fight cars?

938
01:09:31,000 --> 01:09:32,000
Well, the buildings win.

939
01:09:32,000 --> 01:09:35,000
You've probably heard of this one, the fry scraper.

940
01:09:35,000 --> 01:09:40,000
It's also called the walkie-talkie, where the design firm,

941
01:09:40,000 --> 01:09:43,000
I think they came up with the design in, like, 2014,

942
01:09:43,000 --> 01:09:46,000
and they didn't really pursue the idea of, gee,

943
01:09:46,000 --> 01:09:49,000
maybe we should do a really good lighting study of, you know,

944
01:09:49,000 --> 01:09:52,000
what the light's going to do.

945
01:09:52,000 --> 01:09:56,000
And the gist is that, well, what the light does is it melts Porsches,

946
01:09:56,000 --> 01:09:58,000
I think is the deal, or I forget.

947
01:09:58,000 --> 01:10:00,000
No, I think it's a Jaguar, actually.

948
01:10:01,000 --> 01:10:06,000
But anyway, it actually melted a car, you know, sitting on the street

949
01:10:06,000 --> 01:10:09,000
because the thing acts like a concave mirror.

950
01:10:09,000 --> 01:10:11,000
And to be honest, as an architect,

951
01:10:11,000 --> 01:10:15,000
101 would be never design things with concave mirrors,

952
01:10:15,000 --> 01:10:18,000
or B, if you're going to design something with a concave mirror,

953
01:10:18,000 --> 01:10:21,000
don't have it face south if you're in the northern hemisphere,

954
01:10:21,000 --> 01:10:24,000
or, you know, vice versa if you're in the southern hemisphere,

955
01:10:24,000 --> 01:10:26,000
because it's just going to focus the rays, you know,

956
01:10:26,000 --> 01:10:28,000
if you've looked at this at all.

957
01:10:28,000 --> 01:10:30,000
But nonetheless, anyway, it's an interesting thing.

958
01:10:30,000 --> 01:10:33,000
So we've been able to, you know, as a sort of a demo,

959
01:10:33,000 --> 01:10:36,000
we have iRay, which is a physically-based renderer

960
01:10:36,000 --> 01:10:40,000
that we could also use for determining how many, you know,

961
01:10:40,000 --> 01:10:43,000
basically how much illumination, you know,

962
01:10:43,000 --> 01:10:45,000
illuminance is hitting a spot, and you can see,

963
01:10:45,000 --> 01:10:48,000
yeah, that's a red spot, don't park your car there.

964
01:10:48,000 --> 01:10:50,000
But you can use, you know, ray tracing for all kinds of other things.

965
01:10:50,000 --> 01:10:53,000
Here we have millions of spheres, which is really nothing.

966
01:10:53,000 --> 01:10:55,000
You know, I could do 48 million spheres.

967
01:10:55,000 --> 01:10:58,000
This only has 1.7 million atoms.

968
01:10:58,000 --> 01:10:59,000
That's nothing.

969
01:10:59,000 --> 01:11:01,000
But, you know, we can do this interactively.

970
01:11:01,000 --> 01:11:04,000
This is the SARS, you know, COVID thing.

971
01:11:04,000 --> 01:11:10,000
So, you know, but SARS COVID, you know, 20 million spheres and so on.

972
01:11:10,000 --> 01:11:11,000
And this is the kind of thing that's, you know,

973
01:11:11,000 --> 01:11:12,000
oh, ray tracing loves this.

974
01:11:12,000 --> 01:11:15,000
Hey, we can do spheres, great, you know.

975
01:11:15,000 --> 01:11:17,000
And there's other kinds of visualization where, like,

976
01:11:17,000 --> 01:11:21,000
if you're doing volume rendering, you know, ray tracing wins.

977
01:11:21,000 --> 01:11:24,000
Rasterization is just not really good for it.

978
01:11:24,000 --> 01:11:26,000
Same with, you know, here's stellar radiation,

979
01:11:26,000 --> 01:11:29,000
same kind of things where you want to do volume render stuff.

980
01:11:29,000 --> 01:11:31,000
Rasterization is just really bad at volume.

981
01:11:31,000 --> 01:11:33,000
In general, you have to do a lot of hacks,

982
01:11:33,000 --> 01:11:36,000
and often it doesn't quite work and whatnot.

983
01:11:36,000 --> 01:11:38,000
So, anyway.

984
01:11:38,000 --> 01:11:41,000
And finally, you can actually start using ray tracing in actual physical simulations.

985
01:11:41,000 --> 01:11:45,000
So for telescope design, there's obvious uses.

986
01:11:45,000 --> 01:11:47,000
You know, you're tracing rays through optics.

987
01:11:47,000 --> 01:11:49,000
You know, you can do it per wavelength.

988
01:11:49,000 --> 01:11:50,000
You can get all kinds of information out.

989
01:11:50,000 --> 01:11:53,000
And, indeed, that's how people design, you know, lenses now.

990
01:11:53,000 --> 01:11:55,000
And they have for years.

991
01:11:55,000 --> 01:11:57,000
And we talk about photons.

992
01:11:57,000 --> 01:12:00,000
And whenever we talk about photons as a rendering person,

993
01:12:00,000 --> 01:12:02,000
I always think, oh, it's just the visible light.

994
01:12:02,000 --> 01:12:04,000
You know, it's the spectrum kind of thing.

995
01:12:04,000 --> 01:12:06,000
But there's tons of photons out there, you know.

996
01:12:06,000 --> 01:12:10,000
They go from gamma and x-ray all the way down to, you know,

997
01:12:10,000 --> 01:12:15,000
sort of this, you know, longwave radio and whatnot, microwaves, all the rest.

998
01:12:15,000 --> 01:12:18,000
So those are photons, and they're perfectly traceable.

999
01:12:18,000 --> 01:12:21,000
And so you'll see simulations like what's called digital twinning,

1000
01:12:21,000 --> 01:12:25,000
where you kind of make a version of the city that you're, you know,

1001
01:12:25,000 --> 01:12:27,000
wanting to put things in.

1002
01:12:27,000 --> 01:12:29,000
And then you just put things in and see how they work.

1003
01:12:29,000 --> 01:12:33,000
So, you know, here's like, oh, if I put a 5G, you know, tower here,

1004
01:12:33,000 --> 01:12:34,000
how's that going to work?

1005
01:12:34,000 --> 01:12:36,000
You know, how will it work with cars?

1006
01:12:36,000 --> 01:12:39,000
You know, will they use signal, dah, dah, dah, dah, that kind of thing.

1007
01:12:39,000 --> 01:12:41,000
So you can simulate that.

1008
01:12:41,000 --> 01:12:43,000
You can get to really, you know,

1009
01:12:43,000 --> 01:12:45,000
other kinds of things like synthetic aperture radar.

1010
01:12:45,000 --> 01:12:49,000
That's a huge deal for sort of intelligence gathering,

1011
01:12:49,000 --> 01:12:53,000
both by governments and by like open source intelligence.

1012
01:12:53,000 --> 01:12:57,000
They use, you know, you can basically look through the roofs of buildings

1013
01:12:57,000 --> 01:13:00,000
and all kinds of things with synthetic aperture radar.

1014
01:13:00,000 --> 01:13:03,000
So it's got a lot going for it.

1015
01:13:03,000 --> 01:13:06,000
And indeed, you can use ray tracing to do stuff with that.

1016
01:13:06,000 --> 01:13:10,000
Heat transfer, you know, sort of obvious one.

1017
01:13:10,000 --> 01:13:15,000
Audio simulation, which is interesting in that audio is partly direct line,

1018
01:13:15,000 --> 01:13:18,000
but also as it goes, you know, if you hit like a,

1019
01:13:18,000 --> 01:13:22,000
if you shout through a door, you know, people can hear you because the,

1020
01:13:22,000 --> 01:13:26,000
you know, there's sort of a large edge diffraction effect essentially is how

1021
01:13:26,000 --> 01:13:29,000
they're thinking about it in this research paper.

1022
01:13:29,000 --> 01:13:30,000
But this kind of thing gets used.

1023
01:13:30,000 --> 01:13:34,000
I mean, like Dolby uses it to sort of figure out, you know, okay,

1024
01:13:34,000 --> 01:13:36,000
how is sound traveling in the system?

1025
01:13:36,000 --> 01:13:38,000
You know, where do we put the alarms?

1026
01:13:38,000 --> 01:13:41,000
Where do we put whatever?

1027
01:13:41,000 --> 01:13:44,000
And yeah, just other things like seismology.

1028
01:13:44,000 --> 01:13:47,000
There's sort of an interesting dead zone on the earth.

1029
01:13:47,000 --> 01:13:51,000
So when there's an earthquake in a spot, you won't pick up any waves from the,

1030
01:13:51,000 --> 01:13:56,000
you know, from the earthquake because they have this sort of refraction effect

1031
01:13:56,000 --> 01:13:58,000
through various parts of the core.

1032
01:13:58,000 --> 01:14:00,000
And that's, you know,

1033
01:14:00,000 --> 01:14:05,000
a good part of why we know sort of how we have these inner cores of, you know,

1034
01:14:05,000 --> 01:14:09,000
liquid steel or liquid metal and stuff like that, liquid iron and so on,

1035
01:14:09,000 --> 01:14:12,000
is because of how we find these waves.

1036
01:14:12,000 --> 01:14:15,000
And finally, you can do things like train, like robots.

1037
01:14:15,000 --> 01:14:21,000
Well, not finally, but this is yet another application where on the left is a virtual world

1038
01:14:21,000 --> 01:14:24,000
where you're teaching the robot, you know, here's the vision.

1039
01:14:24,000 --> 01:14:25,000
What are you doing, robot?

1040
01:14:25,000 --> 01:14:27,000
Where do you want to put your feet and so on?

1041
01:14:27,000 --> 01:14:30,000
So you can train it in the virtual world without having to, you know,

1042
01:14:30,000 --> 01:14:34,000
run over pedestrians or block off a corridor or anything like that.

1043
01:14:34,000 --> 01:14:37,000
And then, you know, apply that training to the real world.

1044
01:14:39,000 --> 01:14:44,000
And finally, Ikea simulation for driving cars, realistic imagery for the cars, for one.

1045
01:14:44,000 --> 01:14:48,000
And also just, yeah, you can get different array shapes and so on.

1046
01:14:48,000 --> 01:14:50,000
And so that's just, you know, you don't want more.

1047
01:14:50,000 --> 01:14:53,000
And finally, yeah, we have like collision detection and response.

1048
01:14:53,000 --> 01:14:59,000
You know, there are ways to do collision detection that don't necessarily involve rays.

1049
01:14:59,000 --> 01:15:04,000
You can do other geometric sort of surface, you know, does this object overlap that object?

1050
01:15:04,000 --> 01:15:09,000
But rays are handy if you want to get things faster and have more prediction and better response.

1051
01:15:10,000 --> 01:15:17,000
And so anyway, so there's the old joke that goes ray tracing is the technology of the future and it always will be.

1052
01:15:17,000 --> 01:15:21,000
Well, what's particularly funny for me about this was that I looked it up.

1053
01:15:21,000 --> 01:15:24,000
Oh, you know, David Kirk made this joke in 2008.

1054
01:15:24,000 --> 01:15:32,000
And it turns out, well, soon thereafter, he actually started the project at NVIDIA to, you know,

1055
01:15:32,000 --> 01:15:34,000
well, what can we put into hardware?

1056
01:15:34,000 --> 01:15:38,000
What makes sense to put into hardware to commit to actually have ray tracing be faster,

1057
01:15:38,000 --> 01:15:40,000
ray tracing itself be faster?

1058
01:15:40,000 --> 01:15:43,000
And, you know, it sort of started right about this time.

1059
01:15:43,000 --> 01:15:47,000
And it took about 10 years to, you know, finally come out the other end of like, okay,

1060
01:15:47,000 --> 01:15:51,000
these are what things we figured out that are actually worth committing to hardware.

1061
01:15:51,000 --> 01:15:58,000
But now that that process has started, it's now just, you know, sort of every release of the hardware is like, oh, we can add, you know,

1062
01:15:58,000 --> 01:16:02,000
let's see if we can dedicate, oh, we found this cool technique, this cool one, that one.

1063
01:16:02,000 --> 01:16:07,000
Okay, we'll dedicate some hardware to that to make it fast because there's a good payoff.

1064
01:16:07,000 --> 01:16:13,000
So, yeah, now it's sort of simple enough to fit on a business card, complicated enough to consume an entire career.

1065
01:16:13,000 --> 01:16:20,000
I'd actually put consume an entire many careers because there's just a ton to know in the area.

1066
01:16:20,000 --> 01:16:22,000
But, you know, it's knowable.

1067
01:16:22,000 --> 01:16:29,000
Like I say, it's a simple enough thing to start with.

1068
01:16:29,000 --> 01:16:31,000
So that's my talk.

1069
01:16:31,000 --> 01:16:39,000
But Shazan said, oh, can you give some quick advice about, you know, things, you know, as far as career advice kind of thing.

1070
01:16:39,000 --> 01:16:48,000
And I'm not sure if I'm the best person to look at, but, you know, I feel I've been successful for what I wanted to do,

1071
01:16:48,000 --> 01:16:50,000
which is the thing that motivates me.

1072
01:16:50,000 --> 01:16:54,000
I think that's probably number one is what motivates you, you know.

1073
01:16:54,000 --> 01:16:57,000
What motivates me is I really like to share information.

1074
01:16:57,000 --> 01:17:02,000
Like I do some research and I do some development and I do a lot of writing or sometimes write.

1075
01:17:02,000 --> 01:17:07,000
I shouldn't say a lot of writing, sort of periodically I'll do a lot of writing.

1076
01:17:07,000 --> 01:17:15,000
But what I most like to do is try to make connections between people and try to get information out, which is one reason I like giving this lecture.

1077
01:17:15,000 --> 01:17:22,000
One reason I talk too long is because I really want to throw a lot at you guys to have you think about, oh, what was interesting there?

1078
01:17:22,000 --> 01:17:29,000
Or, gee, I want to go look that up and just try to expose you to, you know, to know what you don't know kind of thing.

1079
01:17:29,000 --> 01:17:33,000
Anyway, so I liked this from back from Pax East pre-COVID.

1080
01:17:33,000 --> 01:17:38,000
Rand Miller, who's a sort of famous old game designer, made this classic video game Myst.

1081
01:17:38,000 --> 01:17:41,000
You know, success has a lot to do with luck.

1082
01:17:41,000 --> 01:17:44,000
But if you work hard, you get more dice rolls, which I think is true.

1083
01:17:44,000 --> 01:17:49,000
You know, you sort of have more opportunities the more things you go out and get involved in or do.

1084
01:17:49,000 --> 01:17:59,000
I mean, you don't want to overcommit or anything, but, you know, really sort of follow your passion or, you know, find the things that are interesting to you and go, you know, give that bit of effort to them.

1085
01:17:59,000 --> 01:18:03,000
And I felt that that pays off.

1086
01:18:03,000 --> 01:18:06,000
So these are my pro-ish tips. It's kind of a long list.

1087
01:18:06,000 --> 01:18:10,000
Like I say, I made the slides available. Just go look at them.

1088
01:18:10,000 --> 01:18:12,000
But the gist is, is go do something you want to do.

1089
01:18:12,000 --> 01:18:19,000
I mean, you know, you can put in the minimum. You can get a, you know, a reasonable grade in a class and then go, well, I've done that. Check that off the list.

1090
01:18:19,000 --> 01:18:24,000
But, you know, if you're if you're into the subject, there's it's such a wonderful world out there.

1091
01:18:24,000 --> 01:18:29,000
Really, if you want to do something more in an area, you have that opportunity and there's tons of ways to do it.

1092
01:18:29,000 --> 01:18:38,000
The one I do recommend, no matter what, even if you are like, I don't want to do any of those crazy things he's talking about on this list, is just make your own website for your own stuff.

1093
01:18:38,000 --> 01:18:44,000
You know, just say, here's, you know, like you can have, you know, as a minimum, you always should have your LinkedIn page or whatever.

1094
01:18:44,000 --> 01:18:52,000
That's kind of your your online resume. But having a resume of like, oh, here's, you know, here's projects I've worked on.

1095
01:18:52,000 --> 01:18:57,000
Here's screenshots from them. Here's my GitHub. Here's the stuff I've done. Here's whatever.

1096
01:18:57,000 --> 01:19:00,000
That stuff is just, you know, that sort of follows you through life.

1097
01:19:00,000 --> 01:19:08,000
That's your online, you know, sort of metaverse, you know, kind of thing is that, you know, that's that's where you're living in the virtual world.

1098
01:19:08,000 --> 01:19:15,000
And, you know, really, it's worth your while to do that. And don't just rely on, oh, well, my school has a site and my work has a site.

1099
01:19:15,000 --> 01:19:19,000
Well, guess what? You probably won't have the same job forever anyway.

1100
01:19:19,000 --> 01:19:25,000
Or even if you even if you do have the same job forever, when you retire, you might still want to have that website.

1101
01:19:25,000 --> 01:19:29,000
But anyway, yeah, it's just these are sort of all the things you can do, you know, volunteer.

1102
01:19:29,000 --> 01:19:34,000
If you really are interested in a topic, you know, don't feel shy to ask the author a question.

1103
01:19:34,000 --> 01:19:36,000
They may be too busy. They may not get back to you.

1104
01:19:36,000 --> 01:19:40,000
But, you know, most authors I know, if you're like interested and ask sort of sensible questions,

1105
01:19:40,000 --> 01:19:47,000
and I really, you know, really do care about contacting them and understanding, they're like, oh, wow, somebody's using my work.

1106
01:19:47,000 --> 01:19:52,000
Cool. Here, let me see if I can explain quickly or point you at some other resources or stuff like that.

1107
01:19:52,000 --> 01:19:57,000
Anyway, just get out there. Don't be shy. Don't don't feel like, well, the classroom is all I can learn.

1108
01:19:57,000 --> 01:20:02,000
This is this is all there is to the world. You know, there's a much wider world out there.

1109
01:20:02,000 --> 01:20:06,000
Anyway, so that's just a bunch of kinds of things you can do.

1110
01:20:06,000 --> 01:20:13,000
And my pet peeve is to if you know, I'm happy to say hello to anybody and say, sure, you know, thumbs up.

1111
01:20:13,000 --> 01:20:18,000
I'll link to you on LinkedIn or I'll accept the LinkedIn connection.

1112
01:20:18,000 --> 01:20:25,000
But only if you actually say something to me, you know, or if I've actually met you in person and I know who you are.

1113
01:20:25,000 --> 01:20:31,000
But, you know, I'll often get these just random people from nowhere, you know, saying I want to connect.

1114
01:20:31,000 --> 01:20:39,000
And, you know, they put in two seconds of effort as opposed to, you know, hey, take the whole minute of effort to say, hey, I read your paper on such and so.

1115
01:20:39,000 --> 01:20:43,000
I thought it was cool. Or, you know, hey, I have some questions on such and so.

1116
01:20:43,000 --> 01:20:49,000
You know, in other words, don't don't do it just to be like, oh, I've got to network with people and build up my list.

1117
01:20:49,000 --> 01:20:57,000
That's it's just not it's not so impressive. You know, what's better really is to actually say, oh, I want to connect with you because I really want to connect with you.

1118
01:20:57,000 --> 01:21:01,000
I want to talk to you and see what's going on.

1119
01:21:01,000 --> 01:21:11,000
Anyway, talking about sort of just things things to get involved in something I realized after SIGGRAPH, I went to this sort of thought.

1120
01:21:11,000 --> 01:21:24,000
Well, basically, this whole thing about USD, which is the universal scene description, which is a big deal in both like the film industry and it's becoming a big deal for the metaverse.

1121
01:21:24,000 --> 01:21:32,000
It's basically trying to describe scenes in a very full featured kind of way. It's coming out of Pixar, but it's getting picked up by a lot of film industry.

1122
01:21:32,000 --> 01:21:39,000
And like I say, metaverse interest. And so I realized, like they said, oh, you know what, there's a working group and we have an assets group and you can just join it.

1123
01:21:39,000 --> 01:21:44,000
You know, there's no like, oh, no, no, no. It has to be, you know, vetted by everybody.

1124
01:21:44,000 --> 01:21:49,000
Just show up for the meetings. And so I showed up for a meeting and I was like, oh, you know, I should actually make something.

1125
01:21:49,000 --> 01:22:01,000
So I had this Minecraft exporter and I had these really cool, you know, sort of a highly processed kind of physically based rendering materials that someone else made in Creative Commons.

1126
01:22:01,000 --> 01:22:07,000
And thank heaven for that. And as I said, hey, I'll make this little scene using USD, go test it out.

1127
01:22:07,000 --> 01:22:11,000
And now they're like, oh, yeah, yeah, contribute that, you know, put it on our GitHub repo and so on.

1128
01:22:11,000 --> 01:22:22,000
So, you know, it didn't take me much time to do this. And also I sort of focused on one particular scene here where I realized that a lot of viewers out there don't get this very simple scene correct.

1129
01:22:22,000 --> 01:22:31,000
And I was like, yeah, it should just make a simple test scene so that anybody writing a viewer, you know, can go and test and see, oh, oops, yeah, whoops, I didn't look at bias and scaling.

1130
01:22:31,000 --> 01:22:38,000
And that turns out to be really important. So I should go fix my viewer, you know, make my shader better.

1131
01:22:38,000 --> 01:22:45,000
And so this kind of stuff is like, you know, I'm not like, oh, I'm such a saint, I'm doing it. I just think it's just like, here, here's this cool thing.

1132
01:22:45,000 --> 01:22:52,000
A, I get to contribute to the community. B, it really, it helps NVIDIA. It helps, you know, we're really interested in USD.

1133
01:22:52,000 --> 01:22:56,000
We're using it in our own products a lot. And it helps the community as a whole.

1134
01:22:56,000 --> 01:23:02,000
Anybody using USD can now just say, oh, does my viewer do it? Or, gee, I want to just understand the file format.

1135
01:23:02,000 --> 01:23:09,000
Here's the simple file format. I can just go look at the code. It's all in English, you know, I can read the words, and so on.

1136
01:23:09,000 --> 01:23:13,000
Or I can point out to the spec writers, hey, you guys might want to tighten your spec a bit or whatever.

1137
01:23:13,000 --> 01:23:16,000
Anyway, it's just, it's just good for us all, basically.

1138
01:23:16,000 --> 01:23:21,000
And so it's nice to see other people contributing to the same kind of thing that it didn't take much.

1139
01:23:21,000 --> 01:23:26,000
I mean, this was maybe, this turned out to be a rabbit hole, the whole normals testing thing.

1140
01:23:26,000 --> 01:23:31,000
I learned a heck of a lot about how normal maps are formed, way more than I thought I'd need to learn.

1141
01:23:32,000 --> 01:23:35,000
But all in all, this was, you know, maybe 10, 20 hours of work.

1142
01:23:35,000 --> 01:23:39,000
And most of it was just writing it up, you know, coming up with the test scenes was actually pretty easy.

1143
01:23:39,000 --> 01:23:44,000
The hard part was sort of explaining it all. But anyway, it's not a ton of work.

1144
01:23:44,000 --> 01:23:48,000
And it's the kind of thing you can do. Take my word for it.

1145
01:23:48,000 --> 01:23:55,000
Pixar, this USD working assets group, they only have maybe eight or 10 sort of unit tests.

1146
01:23:55,000 --> 01:23:59,000
And they could use a lot more, in my opinion. There's a lot of features that need testing.

1147
01:23:59,000 --> 01:24:04,000
So, you know, if you're looking for a spare time thing where you want to get involved, this is a nice easy one.

1148
01:24:04,000 --> 01:24:08,000
It's not high tech. You know, they have the viewer right there that you can just use.

1149
01:24:08,000 --> 01:24:15,000
Anyway, so just to wrap it up, at work, ask questions when you don't know things.

1150
01:24:15,000 --> 01:24:18,000
Get over looking ignorant. You know, you don't want to always look ignorant.

1151
01:24:18,000 --> 01:24:21,000
You don't want to be constantly that person with their hand in the air going,

1152
01:24:21,000 --> 01:24:24,000
well, I don't, you just said a sentence, I don't know what you're talking about.

1153
01:24:24,000 --> 01:24:26,000
But, you know, ask that person afterwards.

1154
01:24:26,000 --> 01:24:29,000
So if you don't want to slow down the flow of a meeting or whatever.

1155
01:24:29,000 --> 01:24:31,000
But everybody's ignorant about everything, pretty much.

1156
01:24:31,000 --> 01:24:34,000
You know, I mean, that's as a species. That's how we survived.

1157
01:24:34,000 --> 01:24:39,000
Is that, you know, we you know, we don't all question like, gee, do you think that mushrooms poisonous?

1158
01:24:39,000 --> 01:24:42,000
I don't know. Those five other people tested it and they all died.

1159
01:24:42,000 --> 01:24:47,000
But I could be the lucky one. We have lots and lots received wisdom.

1160
01:24:47,000 --> 01:24:51,000
And there's just tons we just don't know anything about and just kind of go along with the flow.

1161
01:24:51,000 --> 01:24:54,000
But, you know, if you really want to understand something, go and ask.

1162
01:24:54,000 --> 01:24:58,000
Go and ask and it's OK to not, you know, not know everything.

1163
01:24:58,000 --> 01:25:00,000
That's kind of what science is about, right?

1164
01:25:00,000 --> 01:25:03,000
You don't know everything and you're supposed to be trying to figure this stuff out.

1165
01:25:03,000 --> 01:25:09,000
Anyway, feeling solo is fine, but feeling with others and work with others.

1166
01:25:09,000 --> 01:25:12,000
So, yeah, we're all experts in our own little niches.

1167
01:25:12,000 --> 01:25:18,000
Everyone sitting in this room, in the room where I'm talking to, knows something that I don't.

1168
01:25:18,000 --> 01:25:20,000
Knows probably a bunch of some things that I don't.

1169
01:25:20,000 --> 01:25:25,000
And so, yeah, you know, we can be experts, but you have something to learn from, you know,

1170
01:25:25,000 --> 01:25:27,000
everybody else in the world knows something you don't.

1171
01:25:27,000 --> 01:25:29,000
So, you know, keep learning.

1172
01:25:29,000 --> 01:25:35,000
And also, I sort of like this. I'm not religious, but I really, you know, the Bible nailed it on this one,

1173
01:25:35,000 --> 01:25:38,000
which is, you know, let someone else praise you and not your own mouth.

1174
01:25:38,000 --> 01:25:41,000
Or the short version is, you know, self-praise is no recommendation.

1175
01:25:41,000 --> 01:25:44,000
You know, don't be all like, yeah, I did this cool thing.

1176
01:25:44,000 --> 01:25:48,000
Like, yeah, OK, great, you know, just whatever.

1177
01:25:48,000 --> 01:25:49,000
And that's about it.

1178
01:25:49,000 --> 01:25:52,000
So, yeah, there's lots of free resources on ray tracing.

1179
01:25:52,000 --> 01:25:56,000
You could, well, you know, again, you can look up the notes.

1180
01:25:56,000 --> 01:25:59,000
But, again, I have this first website.

1181
01:25:59,000 --> 01:26:00,000
I list them all.

1182
01:26:00,000 --> 01:26:06,000
And the second one is where you can get two free books on ray tracing called Ray Tracing Jobs.

1183
01:26:06,000 --> 01:26:10,000
So, OK, thanks for listening.

1184
01:26:10,000 --> 01:26:12,000
That's where I am.

1185
01:26:12,000 --> 01:26:14,000
If you have any questions or whatever.

1186
01:26:14,000 --> 01:26:15,000
Thank you, Eric.

1187
01:26:15,000 --> 01:26:16,000
That was really good.

1188
01:26:16,000 --> 01:26:23,000
I especially enjoyed the part where you were describing the real world use case of software ray tracing.

1189
01:26:23,000 --> 01:26:28,000
A lot of which, at least in the graphics world, we tend to ignore a little bit

1190
01:26:28,000 --> 01:26:31,000
because we are so focused on the rendering and the animation

1191
01:26:31,000 --> 01:26:35,000
that we forget that there's so many other use cases outside of it.

1192
01:26:35,000 --> 01:26:40,000
And for me, working at Cesium, of course, that's very near and dear to my heart and work.

1193
01:26:40,000 --> 01:26:43,000
So I'll pass it off to students to ask questions.

1194
01:26:43,000 --> 01:26:45,000
Who wants to go first?

1195
01:26:45,000 --> 01:26:50,000
Just make sure you say your name as well.

1196
01:26:50,000 --> 01:26:51,000
Hello.

1197
01:26:51,000 --> 01:26:53,000
Thank you for this wonderful talk.

1198
01:26:53,000 --> 01:26:54,000
My name is Edward.

1199
01:26:54,000 --> 01:26:56,000
I am an undergrad senior.

1200
01:26:56,000 --> 01:27:03,000
And my question is, you talked in the beginning of all of.

1201
01:27:03,000 --> 01:27:05,000
Oops, you cut out.

1202
01:27:05,000 --> 01:27:08,000
Hello?

1203
01:27:08,000 --> 01:27:10,000
Hello?

1204
01:27:10,000 --> 01:27:11,000
You cut out there.

1205
01:27:12,000 --> 01:27:19,000
The type of material that we went through, I'm still not hearing it.

1206
01:27:19,000 --> 01:27:22,000
Hello?

1207
01:27:22,000 --> 01:27:24,000
How about now?

1208
01:27:24,000 --> 01:27:25,000
There we go.

1209
01:27:25,000 --> 01:27:26,000
Okay.

1210
01:27:26,000 --> 01:27:40,000
You talked about the types of materials.

1211
01:27:40,000 --> 01:27:43,000
The types of materials that were the first to be implemented,

1212
01:27:43,000 --> 01:27:49,000
going from glass to diffuse to mirror, and then eventually caustics.

1213
01:27:49,000 --> 01:27:53,000
Is there anything else that we don't know how to do yet?

1214
01:27:53,000 --> 01:27:57,000
That's a good question, actually.

1215
01:27:57,000 --> 01:28:00,000
At some level, yeah, it's funny.

1216
01:28:01,000 --> 01:28:13,000
I think that's something, usually, not by a letter, perhaps.

1217
01:28:13,000 --> 01:28:18,000
But, yeah, I think people are kind of satisfied in a certain sense.

1218
01:28:18,000 --> 01:28:22,000
They go, okay, I've got fuzzy, I've got this, I've got that.

1219
01:28:22,000 --> 01:28:26,000
I've got fur, I've got feathers, I've got whatever.

1220
01:28:26,000 --> 01:28:29,000
And there will be some studies sometimes of like, oh, wait,

1221
01:28:29,000 --> 01:28:32,000
this is a kind of interesting phenomenon that we haven't seen before.

1222
01:28:32,000 --> 01:28:37,000
So the film guys will go, oh, how can we do this kind of cool glaze

1223
01:28:37,000 --> 01:28:40,000
over pottery or whatever it is, something.

1224
01:28:40,000 --> 01:28:43,000
But, yeah, I don't know.

1225
01:28:43,000 --> 01:28:46,000
It's kind of interesting because, yeah,

1226
01:28:46,000 --> 01:28:50,000
I don't really follow the latest and greatest as far as materials go.

1227
01:28:50,000 --> 01:28:54,000
And what was interesting to me was actually going to a talk a few years

1228
01:28:54,000 --> 01:28:59,000
ago where the person there was a biologist and she was studying the wings

1229
01:28:59,000 --> 01:29:02,000
of these like morpho butterflies or whatever.

1230
01:29:02,000 --> 01:29:05,000
And there's a certain breed that has like, you know,

1231
01:29:05,000 --> 01:29:08,000
like you've probably seen the phantom black where it's really black.

1232
01:29:08,000 --> 01:29:11,000
Like, you know, you shine light on it and just about nothing comes off of it.

1233
01:29:11,000 --> 01:29:13,000
And they were saying, oh,

1234
01:29:13,000 --> 01:29:18,000
these butterfly wings are actually even more black than those.

1235
01:29:18,000 --> 01:29:22,000
And she actually did a whole like micro analysis, you know,

1236
01:29:22,000 --> 01:29:26,000
and did a lot of optical ray tracing simulations to figure out, you know,

1237
01:29:26,000 --> 01:29:29,000
what the geometric structure of that was, you know,

1238
01:29:29,000 --> 01:29:32,000
why does light go into these things and never come out basically.

1239
01:29:32,000 --> 01:29:36,000
So there's, you know, there's actually interesting materials work and so on.

1240
01:29:36,000 --> 01:29:40,000
I think on a different level, like, you know, a real practical,

1241
01:29:40,000 --> 01:29:43,000
like we're, you know, we're looking at material science kind of level.

1242
01:29:43,000 --> 01:29:46,000
But I frankly don't follow it very much.

1243
01:29:46,000 --> 01:29:48,000
I mean, you know, I'm kind of like, well, yeah, good.

1244
01:29:48,000 --> 01:29:52,000
We got here, we got clear codes for, you know, cars, we've got this, that.

1245
01:29:52,000 --> 01:29:55,000
But yeah, I don't know.

1246
01:29:55,000 --> 01:29:56,000
That's interesting.

1247
01:29:56,000 --> 01:30:01,000
I'll have to quiz the materials guy at a video that I know and see if he has anything.

1248
01:30:01,000 --> 01:30:03,000
It's like, yeah, if only we could do so-and-so.

1249
01:30:03,000 --> 01:30:04,000
But I don't think so.

1250
01:30:04,000 --> 01:30:07,000
I mean, I think there's, like I say, most people just have, you know,

1251
01:30:07,000 --> 01:30:10,000
are trying to figure out something that's, you know, it just has to look right.

1252
01:30:10,000 --> 01:30:13,000
So if we can figure out something that's a reasonable approximation,

1253
01:30:13,000 --> 01:30:15,000
it's like, yeah, okay, great.

1254
01:30:16,000 --> 01:30:17,000
Thank you.

1255
01:30:35,000 --> 01:30:36,000
Hello, professor.

1256
01:30:36,000 --> 01:30:37,000
I'm Shu Tong.

1257
01:30:37,000 --> 01:30:38,000
I'm a first-year CET student.

1258
01:30:38,000 --> 01:30:40,000
I have a question.

1259
01:30:40,000 --> 01:30:42,000
So back when 10 years ago, like,

1260
01:30:42,000 --> 01:30:46,000
computer game graphics aren't as realistic as what we have today.

1261
01:30:46,000 --> 01:30:49,000
So what do you think the future, like, after 10 years ago,

1262
01:30:49,000 --> 01:30:54,000
after 10 years, like, what will the graphics be in computer games and in the industry?

1263
01:30:59,000 --> 01:31:03,000
The motor's a lot slowing down, but, you know, we're certainly trying to boost it.

1264
01:31:03,000 --> 01:31:04,000
And we're not the only ones.

1265
01:31:04,000 --> 01:31:09,000
I mean, like, you know, ray tracing is certainly seeing its use, you know,

1266
01:31:10,000 --> 01:31:13,000
and AMD and Intel, they're all, you know,

1267
01:31:13,000 --> 01:31:15,000
coming out with things that are ray tracing oriented.

1268
01:31:15,000 --> 01:31:19,000
So it's sort of a new tool in the toolbox, basically.

1269
01:31:19,000 --> 01:31:26,000
And it's one that, you know, in some ways, yeah, it's basically, it's just being born.

1270
01:31:26,000 --> 01:31:30,000
You know, we're sort of finding out, like, denoising in particular is one where we're finding,

1271
01:31:30,000 --> 01:31:33,000
gee, we don't really have to be shooting all those sensors.

1272
01:31:33,000 --> 01:31:38,000
So I think that, yeah, you know, it's sort of, you know,

1273
01:31:38,000 --> 01:31:40,000
we've never gotten to the point where we're like, well, that's it.

1274
01:31:40,000 --> 01:31:41,000
We're done.

1275
01:31:41,000 --> 01:31:43,000
You know, we have all the detail we want in the scene.

1276
01:31:43,000 --> 01:31:45,000
Everything's moving fast.

1277
01:31:45,000 --> 01:31:48,000
You know, we can do all kinds, you know, get all these nice motion blur effects.

1278
01:31:48,000 --> 01:31:53,000
We, you know, we can deal with hundreds or thousands of moving objects.

1279
01:31:53,000 --> 01:31:54,000
You know, we're done.

1280
01:31:54,000 --> 01:32:00,000
And so, you know, I think it's just continuing to be sort of upwards and onwards on that front

1281
01:32:00,000 --> 01:32:04,000
is that, you know, people are trying to figure out more and more techniques,

1282
01:32:04,000 --> 01:32:06,000
both in software and hardware.

1283
01:32:06,000 --> 01:32:08,000
You know, how can we get things faster?

1284
01:32:08,000 --> 01:32:12,000
Because going from something that's kind of clunky, like, oh, once every five seconds,

1285
01:32:12,000 --> 01:32:15,000
I get an update to, you know, once every one second, I get an update,

1286
01:32:15,000 --> 01:32:19,000
to something that's actually interactive where it's like at least six frames per second,

1287
01:32:19,000 --> 01:32:22,000
you know, starts to feel, you know, slower than that,

1288
01:32:22,000 --> 01:32:24,000
and you feel like you're kind of moving through molasses.

1289
01:32:24,000 --> 01:32:27,000
But if you start getting some kind of frame rate, it's like, ooh,

1290
01:32:27,000 --> 01:32:29,000
this actually is qualitatively different.

1291
01:32:29,000 --> 01:32:31,000
You know, it helps artists do their jobs.

1292
01:32:31,000 --> 01:32:37,000
It helps CAD designers do their jobs, you know, beyond just graphics for games and so on.

1293
01:32:37,000 --> 01:32:43,000
But I think that, yeah, that's going to continue to be a thing that people are just going to be like,

1294
01:32:43,000 --> 01:32:45,000
yeah, keep pushing on that.

1295
01:32:45,000 --> 01:32:47,000
We found that useful.

1296
01:32:47,000 --> 01:32:48,000
So I don't know.

1297
01:32:48,000 --> 01:32:51,000
You know, in one way, it's like, yeah, we're just done.

1298
01:32:51,000 --> 01:32:53,000
But, yeah, I don't know.

1299
01:32:53,000 --> 01:32:57,000
I don't know what the exact things are that will get better.

1300
01:32:57,000 --> 01:33:02,000
There's also sort of interesting things, obviously, with VR and virtual reality and augmented reality,

1301
01:33:02,000 --> 01:33:07,000
where like seeing like the PlayStation's new VR headset, that looks pretty cool.

1302
01:33:07,000 --> 01:33:10,000
Like they've got all kinds of things going on with eye tracking and just, you know,

1303
01:33:10,000 --> 01:33:13,000
a bunch of sort of newer technologies.

1304
01:33:13,000 --> 01:33:18,000
And so I think there's a lot of sort of interesting things perceptually that will go on there of like, you know,

1305
01:33:18,000 --> 01:33:20,000
what do we need to render at high res?

1306
01:33:20,000 --> 01:33:26,000
What can we get by with low res if our eyes aren't looking directly at something we can get away with

1307
01:33:26,000 --> 01:33:29,000
and sort of cheaper along the periphery?

1308
01:33:29,000 --> 01:33:31,000
So that's sort of another area.

1309
01:33:31,000 --> 01:33:32,000
Yeah, I don't know.

1310
01:33:32,000 --> 01:33:33,000
I look forward to it, frankly.

1311
01:33:33,000 --> 01:33:35,000
You know, like I really didn't know.

1312
01:33:35,000 --> 01:33:40,000
Like when I first saw denoising, like maybe in 2017, I was like, well, that's magic, you know.

1313
01:33:40,000 --> 01:33:45,000
But that turned out to be a real thing that, you know, really could be evaluated very quickly

1314
01:33:45,000 --> 01:33:50,000
and give, you know, a reasonable image very rapidly and save a lifetime.

1315
01:33:50,000 --> 01:33:53,000
So, yeah, I look forward to what surprises there are.

1316
01:33:53,000 --> 01:33:55,000
I mean, personally, I'm not sure.

1317
01:33:55,000 --> 01:33:59,000
But, you know, it seems like people haven't just sort of washed their hands of it

1318
01:33:59,000 --> 01:34:00,000
and said, well, we're done now.

1319
01:34:00,000 --> 01:34:08,000
You know, it's just rendering solved.

1320
01:34:08,000 --> 01:34:18,000
Yeah, we're at the point where game graphics are kind of realistic.

1321
01:34:18,000 --> 01:34:21,000
But I'm not sure.

1322
01:34:48,000 --> 01:35:09,000
So there's sort of a whole bunch of other things, like physics and so on,

1323
01:35:09,000 --> 01:35:14,000
where, you know, actual simulation processes, again, making those fast and iterative, you know,

1324
01:35:15,000 --> 01:35:18,000
that we can iterate and look at, oh, that animation didn't work.

1325
01:35:18,000 --> 01:35:21,000
Okay, let me try this, you know, that iteration cycle.

1326
01:35:21,000 --> 01:35:25,000
If you can make that fast, that's the sweet spot.

1327
01:35:25,000 --> 01:35:30,000
That's the, you know, point where you get a lot more out of animation or animators doing your work

1328
01:35:30,000 --> 01:35:35,000
and so on, as opposed to, you know, oh, I said it and I came back five minutes later

1329
01:35:35,000 --> 01:35:37,000
to look at the animation and, nah, it looked terrible.

1330
01:35:37,000 --> 01:35:39,000
And now I change, I'll tweak one little thing.

1331
01:35:39,000 --> 01:35:42,000
You know, that's a terrible kind of development cycle.

1332
01:35:42,000 --> 01:35:44,000
So, anyway.

1333
01:35:44,000 --> 01:35:48,000
Yeah, I think simulation has to do a lot of work.

1334
01:35:48,000 --> 01:35:51,000
Eric, I had a follow-up to that question.

1335
01:35:51,000 --> 01:35:58,000
Do you think we'll see drastic seismic shifts in rendering like we had with RTX?

1336
01:35:58,000 --> 01:36:05,000
Or do you think denoising will just help the incremental updates that we're going to see?

1337
01:36:05,000 --> 01:36:06,000
Yeah, I don't know.

1338
01:36:06,000 --> 01:36:11,000
I mean, right, you know, I don't want to be one of those old guys that's like,

1339
01:36:11,000 --> 01:36:13,000
oh, I think we've got all the problems solved now.

1340
01:36:13,000 --> 01:36:20,000
And then five years from now, some amazing thing comes up that's like, oh, wait.

1341
01:36:20,000 --> 01:36:24,000
You know, that's the limits of my imagination, right?

1342
01:36:24,000 --> 01:36:25,000
Yeah, I don't know.

1343
01:36:25,000 --> 01:36:27,000
I mean, you know, what's funny is to, like, look at things like nerfs,

1344
01:36:27,000 --> 01:36:32,000
which two years ago, you know, no one was looking at this nerf technology.

1345
01:36:32,000 --> 01:36:37,000
And now it's sort of like, well, maybe that's actually useful for online shopping.

1346
01:36:37,000 --> 01:36:42,000
You know, you want to look at an object, and sure, you can look at 3D images of the object.

1347
01:36:42,000 --> 01:36:47,000
But what if you could just rotate the object around and know that what you're seeing is, you know,

1348
01:36:47,000 --> 01:36:53,000
pretty detailed and is actually capturing the feel of the, you know, the object itself, the actual look?

1349
01:36:53,000 --> 01:36:57,000
You know, you're buying, I don't know, a purse or something, and you rotate it around,

1350
01:36:57,000 --> 01:36:59,000
and you can see, oh, that's how the light's going to reflect and so on,

1351
01:36:59,000 --> 01:37:03,000
and that's how it's going to look in the scene and stuff like that.

1352
01:37:03,000 --> 01:37:06,000
You know, that's pretty interesting.

1353
01:37:06,000 --> 01:37:10,000
But right now, it's, you know, just a little baby research tech that kind of came out of nowhere, you know.

1354
01:37:10,000 --> 01:37:17,000
It was one of these, like, oh, why don't we hook, you know, multilayer perceptrons to, you know,

1355
01:37:17,000 --> 01:37:22,000
like just determining if these views correlate and what's that,

1356
01:37:22,000 --> 01:37:25,000
where the two views are looking and so on and see how that works.

1357
01:37:25,000 --> 01:37:27,000
And suddenly, oh, wait, we're getting 3D models out of this.

1358
01:37:27,000 --> 01:37:28,000
Oh, this is cool.

1359
01:37:28,000 --> 01:37:30,000
So, yeah, I don't know.

1360
01:37:30,000 --> 01:37:35,000
I think there's a lot of interesting rendering stuff to be done

1361
01:37:35,000 --> 01:37:38,000
just because there are so many different representations of data,

1362
01:37:38,000 --> 01:37:41,000
and some of them surprisingly fast.

1363
01:37:41,000 --> 01:37:44,000
I mean, the NERF stuff is, you know, it's pretty fast to make images,

1364
01:37:44,000 --> 01:37:46,000
and they look pretty convincing.

1365
01:37:46,000 --> 01:37:51,000
So, anyway.

1366
01:37:51,000 --> 01:37:54,000
Hello, and how are you doing?

1367
01:37:54,000 --> 01:37:55,000
Yeah, okay.

1368
01:37:55,000 --> 01:37:56,000
I'm Gita Joshi.

1369
01:37:56,000 --> 01:37:59,000
I'm currently in the second year of CGJT.

1370
01:38:00,000 --> 01:38:05,000
And during your talk, you mentioned that we should, right now,

1371
01:38:05,000 --> 01:38:11,000
we are at a point where we just need to cast enough rays to make every ray worth it.

1372
01:38:11,000 --> 01:38:16,000
So I was wondering if you could elaborate on how could we find out,

1373
01:38:16,000 --> 01:38:22,000
like, how do we determine what part of the scene requires more details

1374
01:38:23,000 --> 01:38:28,000
or more rays have to be cast in that particular direction

1375
01:38:28,000 --> 01:38:31,000
or towards that part of the scene to get more details there,

1376
01:38:31,000 --> 01:38:37,000
and then cast probably lesser rays because we don't need them on those parts of the scene,

1377
01:38:37,000 --> 01:38:40,000
which are simple.

1378
01:38:40,000 --> 01:38:46,000
Yeah, it's an interesting question because it's, you know, well, right,

1379
01:38:46,000 --> 01:38:50,000
could you do sort of a low-res pass and then say, oh, okay, you know,

1380
01:38:50,000 --> 01:38:52,000
here I think is what's going on.

1381
01:38:52,000 --> 01:38:55,000
The trick is you don't want to miss any, like, high-frequency details.

1382
01:38:55,000 --> 01:39:00,000
You know, you can sort of, that's the catch, right, is you sort of say, well, okay,

1383
01:39:00,000 --> 01:39:02,000
I'm just going to shoot a few rays here.

1384
01:39:02,000 --> 01:39:05,000
And, oh, look, they all hit this black object that I'm holding up.

1385
01:39:05,000 --> 01:39:09,000
Well, the black object happened to be a comb, and you just happened to hit four spots on it.

1386
01:39:09,000 --> 01:39:12,000
And so maybe you fill it in as a rectangle because you say, well,

1387
01:39:12,000 --> 01:39:14,000
all four of those spots were a rectangle.

1388
01:39:14,000 --> 01:39:17,000
But, in fact, the comb has a bunch of teeth, and so, you know,

1389
01:39:17,000 --> 01:39:22,000
you really should have shot more rays to make sure you got the fact that there's some high-frequency going on there.

1390
01:39:22,000 --> 01:39:25,000
So there's always a chance, like, if you're under-sampling.

1391
01:39:25,000 --> 01:39:30,000
And we saw that in that one image where, you know, we didn't capture that fine shadow because,

1392
01:39:30,000 --> 01:39:33,000
well, we just didn't shoot enough rays to really know, oh, yeah, there's a shadow here.

1393
01:39:33,000 --> 01:39:36,000
Let's put, you know, put a shadow there.

1394
01:39:36,000 --> 01:39:41,000
But there is, like, for example, in the first ray-tracing gems, there's an article by,

1395
01:39:41,000 --> 01:39:45,000
I don't know, I think it's, I want to say Bob Sansky or something.

1396
01:39:45,000 --> 01:39:51,000
There's one about anti-racing where he kind of does a simple, hey, I'm just going to do a ray per pixel,

1397
01:39:51,000 --> 01:39:54,000
and then I'm going to go back and sort of see where the high-frequency areas are.

1398
01:39:54,000 --> 01:39:56,000
Like, oh, look, something's changing over here.

1399
01:39:56,000 --> 01:39:58,000
You know, I went from one object to another.

1400
01:39:58,000 --> 01:40:02,000
So go back and shoot more rays at those locations, you know, that kind of thing.

1401
01:40:02,000 --> 01:40:07,000
And I think that's an interesting approach of, you know, instead of trying to do a denoise kind of thing,

1402
01:40:07,000 --> 01:40:11,000
you just say, no, no, no, you know, I'd really like to shoot more rays where I think they're important.

1403
01:40:11,000 --> 01:40:15,000
So I think, you know, there are ideas like that, where can we shoot more rays.

1404
01:40:15,000 --> 01:40:18,000
That's what a lot of the sort of ReSTIR stuff is about.

1405
01:40:18,000 --> 01:40:21,000
Like, well, you know, you've got a thousand light sources in the scene.

1406
01:40:21,000 --> 01:40:24,000
You know, how do I find those useful lights?

1407
01:40:24,000 --> 01:40:29,000
But on the other hand, you don't want to just get stuck and say, well, that's the useful light,

1408
01:40:29,000 --> 01:40:30,000
and there's no other useful lights.

1409
01:40:30,000 --> 01:40:33,000
So how often do you shoot other rays out to sort of say, oh,

1410
01:40:33,000 --> 01:40:37,000
are there any other useful lights that have come into play in this scene?

1411
01:40:37,000 --> 01:40:42,000
So there's just a lot of, yeah, there's tons to be done in a certain way,

1412
01:40:42,000 --> 01:40:45,000
and it kind of depends on the application of what you're trying to solve.

1413
01:40:45,000 --> 01:40:47,000
Is there a lot of stuff moving around in the scene?

1414
01:40:47,000 --> 01:40:50,000
Are there lights moving around in the scene?

1415
01:40:50,000 --> 01:40:52,000
What's sort of happening?

1416
01:40:52,000 --> 01:40:59,000
There's so many parameters that it's, you know, you push one of those parameters to one end or the other,

1417
01:40:59,000 --> 01:41:02,000
and it becomes like, hmm, okay, how do I solve that problem?

1418
01:41:03,000 --> 01:41:10,000
My technique is falling apart because, you know, classic things like, oh, my door is just a crack open.

1419
01:41:10,000 --> 01:41:14,000
I'm in a dark room, and the only light coming in is through that door.

1420
01:41:14,000 --> 01:41:18,000
That's a famous problem with what's called a metropolis light transport,

1421
01:41:18,000 --> 01:41:21,000
where you are trying to figure out, well, where's the light coming from?

1422
01:41:21,000 --> 01:41:26,000
Well, it's only from that little slit in the door where the door is just slightly ajar.

1423
01:41:26,000 --> 01:41:31,000
Well, how do we find that light and use it as opposed to just shooting samples everywhere

1424
01:41:31,000 --> 01:41:33,000
and always getting whack as our answer?

1425
01:41:33,000 --> 01:41:36,000
So, anyway, that's it in a nutshell.

1426
01:41:36,000 --> 01:41:40,000
There's lots of, well, how do we sample things better?

1427
01:41:40,000 --> 01:41:43,000
That's it in a nutshell.

1428
01:41:43,000 --> 01:41:50,000
You're talking about almost all ray tracing research as far as speeding things up is, you know,

1429
01:41:50,000 --> 01:41:55,000
what should I do with my rays?

1430
01:41:55,000 --> 01:41:58,000
Thank you.

1431
01:41:59,000 --> 01:42:02,000
Hi, Eric, can you hear me?

1432
01:42:02,000 --> 01:42:04,000
Hi, thanks for coming today.

1433
01:42:04,000 --> 01:42:06,000
It's a truly inspiring talk.

1434
01:42:06,000 --> 01:42:07,000
So my name is Leo.

1435
01:42:07,000 --> 01:42:11,000
I'm a second-year graphics master's student.

1436
01:42:11,000 --> 01:42:19,000
My question is, so over the recent years, NVIDIA is kind of like switching the direction.

1437
01:42:19,000 --> 01:42:26,000
Instead of just purely pursuing more raw power on the graphics card,

1438
01:42:26,000 --> 01:42:31,000
NVIDIA is kind of like switching to accelerated computing,

1439
01:42:31,000 --> 01:42:36,000
so adding more specialized cores, doing like DLSS.

1440
01:42:36,000 --> 01:42:42,000
So as a graphics student, I have this concern.

1441
01:42:42,000 --> 01:42:52,000
So I worry in the near future people might think that we don't really need that many graphics engineers anymore.

1442
01:42:52,000 --> 01:42:58,000
We just need some basic graphics and let AI do all the work.

1443
01:42:58,000 --> 01:43:04,000
So what's your opinion on this?

1444
01:43:04,000 --> 01:43:07,000
Yeah, I would not think so.

1445
01:43:07,000 --> 01:43:09,000
I'd like to stay employed.

1446
01:43:09,000 --> 01:43:16,000
But no, there's plenty of graphics work to be done for sure.

1447
01:43:17,000 --> 01:43:23,000
One project that I've been working on, me and, I don't know, a thousand other people at NVIDIA, is Omniverse.

1448
01:43:23,000 --> 01:43:29,000
It's this one thing called Omniverse where we're basically just trying to make a platform that's kind of,

1449
01:43:29,000 --> 01:43:31,000
it's not really meant as a modeling thing.

1450
01:43:31,000 --> 01:43:37,000
It's more meant as a simulation and rendering where we can bring in all kinds of different data sources

1451
01:43:37,000 --> 01:43:42,000
and work out, you know, put them in particular in a sim and animate them or simulate,

1452
01:43:42,000 --> 01:43:45,000
you know, do simulations on them or whatever.

1453
01:43:45,000 --> 01:43:50,000
And so there's tons of work just from a pure, like, work to be done kind of standpoint.

1454
01:43:50,000 --> 01:43:52,000
But I love that product.

1455
01:43:52,000 --> 01:43:53,000
It's a free product.

1456
01:43:53,000 --> 01:43:55,000
It's just a free download.

1457
01:43:55,000 --> 01:44:00,000
But it's, you know, sort of like looking at the future.

1458
01:44:00,000 --> 01:44:05,000
Because I'm like, yeah, anybody that thinks, oh, we're done, you know, we've got all the graphics we need.

1459
01:44:05,000 --> 01:44:10,000
Like that system has a really nice, it has like actually three main renderers in it.

1460
01:44:11,000 --> 01:44:15,000
One's like a real-time renderer, which is, has a little bit of ray tracing in it.

1461
01:44:15,000 --> 01:44:20,000
There's one that's a path tracer, which is a little slower, but a little more, a little nicer.

1462
01:44:20,000 --> 01:44:25,000
And there's iRay, which is the more sort of professional, like serious ray tracer that takes longer,

1463
01:44:25,000 --> 01:44:28,000
but you get a better image over the long run.

1464
01:44:28,000 --> 01:44:32,000
And so there's sort of these different levels of like, well, what do you want in rendering?

1465
01:44:32,000 --> 01:44:36,000
Do you want that super fast interactive where I just need something on the screen and show it to me?

1466
01:44:36,000 --> 01:44:41,000
Or do you want the, oh, I'm wanting to wait a half a second to see, you know, a nice render of my thing.

1467
01:44:41,000 --> 01:44:46,000
Or do I want to wait five seconds to get a good render, that kind of thing.

1468
01:44:46,000 --> 01:44:53,000
And so even, you know, so that's, again, another sliding scale, which, you know, you may have not one, not two, but three renderers.

1469
01:44:53,000 --> 01:45:00,000
Plus there's all these other kinds of renderers you can plug in that are called Hydra Delegates for rendering,

1470
01:45:00,000 --> 01:45:03,000
which is a universal scene description kind of thing.

1471
01:45:03,000 --> 01:45:09,000
So, you know, and those renderers that we have are like super fast, and, you know, they're focused on NVIDIA.

1472
01:45:09,000 --> 01:45:12,000
You have to have NVIDIA hardware to use, that kind of thing.

1473
01:45:12,000 --> 01:45:20,000
And so anybody in the rest of the world, outside of NVIDIA, that's like wanting to take advantage of that,

1474
01:45:20,000 --> 01:45:23,000
has to sort of do that rendering, you know, kind of thing.

1475
01:45:23,000 --> 01:45:26,000
So from just a development standpoint, I think there's just a ton of work.

1476
01:45:26,000 --> 01:45:30,000
For that alone, you know, it's not maybe the most glamorous work on one level, but on another level,

1477
01:45:30,000 --> 01:45:35,000
it's like, no, you're solving real problems of, you know, it's not research per se, but it's more development.

1478
01:45:35,000 --> 01:45:39,000
Like what actually works? You know, how do I make this fast?

1479
01:45:39,000 --> 01:45:43,000
And there's always quality speed tradeoffs. You know, what's the default here?

1480
01:45:43,000 --> 01:45:48,000
You know, we argue internally about, you know, well, you know, turn that flag on by default.

1481
01:45:48,000 --> 01:45:51,000
No, no, off, because it slows it way down when you do this.

1482
01:45:51,000 --> 01:45:57,000
So anyway, there's, you know, there's a lot of sort of interesting work there, basically.

1483
01:45:57,000 --> 01:45:59,000
That's just from a development side.

1484
01:45:59,000 --> 01:46:04,000
So, yeah, I don't know. And like I say, there's sort of, you know, on the research side,

1485
01:46:04,000 --> 01:46:07,000
we do have these new ideas that come in, and they're like, oh, yeah, that's really good.

1486
01:46:07,000 --> 01:46:12,000
Okay, let's expose that as software, or maybe that'll influence future hardware.

1487
01:46:12,000 --> 01:46:16,000
Yeah, I don't know. I don't feel like, you know, we may be done.

1488
01:46:16,000 --> 01:46:23,000
I feel like we're semi-done, but that's probably my ignorance at work as far as, you know, materials and so on.

1489
01:46:23,000 --> 01:46:26,000
Like I feel like we've got a fairly good grip on a lot of materials.

1490
01:46:26,000 --> 01:46:34,000
You know, we can make a lot of, you know, tiles or wood or stuff like that, you know, but even then, you know, carved wood.

1491
01:46:34,000 --> 01:46:40,000
I know a few companies that have good carved wood, but we're not one of them.

1492
01:46:40,000 --> 01:46:47,000
Anyway, or I don't think so, but I don't really look at it per se, but there's some really elaborate wood models as far as how things are flying and so on.

1493
01:46:47,000 --> 01:46:53,000
I don't think we're at that level yet, but, you know, we're moving onwards with that kind of thing.

1494
01:46:53,000 --> 01:47:00,000
But there's, you know, tons of materials in the world. There's tons of lighting situations, and, you know, each has its own niche.

1495
01:47:00,000 --> 01:47:03,000
You know, how much do you spend on that niche? I don't know.

1496
01:47:03,000 --> 01:47:09,000
Yeah, I just feel like, you know, there's not like, oh, well, once we've got the renderer, we're done.

1497
01:47:09,000 --> 01:47:15,000
Like, film companies, they kind of have the renderer in a certain sense, you know, their final frame renderer.

1498
01:47:15,000 --> 01:47:22,000
They're not going to, you know, throw it all away and make a new one overnight, but they'll constantly be adding new features.

1499
01:47:22,000 --> 01:47:27,000
You know, this will speed this up. This will make this material better. This will work better in animation.

1500
01:47:27,000 --> 01:47:30,000
This will do this simulation, you know, that kind of thing.

1501
01:47:30,000 --> 01:47:36,000
You know, every film is usually adding one or two new effects to their library of things they can do.

1502
01:47:36,000 --> 01:47:43,000
So, yeah, I don't know. I don't feel like anyone's like, yep, we're done, you know, just wash our hands and we'll all figure it out.

1503
01:47:43,000 --> 01:47:51,000
You know, yeah, sure, maybe for, I don't know, games like films or something, we don't have, you know, too much more processing power and that might be it.

1504
01:47:51,000 --> 01:47:55,000
But, I don't know, phones are still getting faster and so on, so.

1505
01:47:55,000 --> 01:47:57,000
I think there's more than that.

1506
01:47:57,000 --> 01:47:59,000
Thank you.

1507
01:48:10,000 --> 01:48:13,000
Hello, Eric. My name is Alex.

1508
01:48:13,000 --> 01:48:20,000
And talking about AI, neural rendering is really a hot topic now.

1509
01:48:20,000 --> 01:48:29,000
So, my question is, how soon do you think will neural rendering find it useful in the game industry?

1510
01:48:31,000 --> 01:48:34,000
Yeah, it, let's see, it sort of depends.

1511
01:48:34,000 --> 01:48:38,000
I mean, it's sort of, it's like a, it's almost like a bell curve, you know.

1512
01:48:38,000 --> 01:48:46,000
It's one of these things where you'll have a few early adopters, you know, like sort of AAA titles, you know,

1513
01:48:46,000 --> 01:48:53,000
and they'll devote some time to like, oh, you know, if you want to have the coolest graphics, you know, get this new card or, you know, whatever.

1514
01:48:53,000 --> 01:48:57,000
And, you know, you'll get this feature and, you know, we're cooler.

1515
01:48:57,000 --> 01:48:59,000
And it'll be faster, it's a good one.

1516
01:48:59,000 --> 01:49:02,000
You know, you just get the new card and it's faster, but that's not very interesting.

1517
01:49:02,000 --> 01:49:05,000
But, you know, you'll get new effects and so on.

1518
01:49:05,000 --> 01:49:15,000
And, you know, what happens over time is that sort of, you know, as old cards go away, you know, as they die off,

1519
01:49:15,000 --> 01:49:21,000
and, you know, if you're using a GPU from 10 years ago, you're probably not playing very many games, you know.

1520
01:49:21,000 --> 01:49:27,000
There's very few games that you can play that are sort of serious AAA titles or that push, you know, push things at all.

1521
01:49:27,000 --> 01:49:31,000
You pretty much have to have, you know, a relatively decent card the past few years.

1522
01:49:31,000 --> 01:49:35,000
I don't know what the drop-off is at all, but, you know, it's the kind of thing you can look at.

1523
01:49:35,000 --> 01:49:39,000
I think Steam has, you know, stats about who's using what cards and, you know,

1524
01:49:39,000 --> 01:49:43,000
what are the cards that get used for Steam games and so on.

1525
01:49:43,000 --> 01:49:45,000
And that's pretty interesting to look at right now.

1526
01:49:45,000 --> 01:49:49,000
But, yeah, so, you know, GPUs are always phasing out.

1527
01:49:49,000 --> 01:49:55,000
And so as the new GPUs come in, you start to be able to, you know, use these features more widely as they're just like,

1528
01:49:55,000 --> 01:49:58,000
oh, everybody has ray tracing, you know.

1529
01:49:58,000 --> 01:50:05,000
It used to be, you know, way back in the day, like, you know, you could do a bit of rendering on the screen and that was it.

1530
01:50:05,000 --> 01:50:10,000
And that sort of locked in, you know, you had very little choice as far as shading models or anything.

1531
01:50:10,000 --> 01:50:13,000
And then we had programmable shaders and that opened up a lot of ideas.

1532
01:50:13,000 --> 01:50:21,000
And people then realized, oh, look, we can do multi-pass, we can do a bunch of images and combine them, you know, in a single image.

1533
01:50:21,000 --> 01:50:27,000
We can do special effects that way, we can do coder tricks, basically, like shadows and stuff.

1534
01:50:27,000 --> 01:50:36,000
So there's sort of a bunch of, yeah, I don't know, you know, technology basically, I find it fascinating, basically, because there is a lag.

1535
01:50:36,000 --> 01:50:38,000
You know, it's not like, oh, there's new features in hardware.

1536
01:50:38,000 --> 01:50:40,000
So, you know, forget all those old users.

1537
01:50:40,000 --> 01:50:42,000
The only way you can play this game is this.

1538
01:50:42,000 --> 01:50:45,000
Well, you're probably not going to do so well.

1539
01:50:45,000 --> 01:50:51,000
But if you have the, oh, wait, you know, if we detect you have one of these cool ones, we can do this nice effect.

1540
01:50:51,000 --> 01:50:56,000
That can be, you know, a definite selling point for games.

1541
01:50:56,000 --> 01:51:00,000
You know, there's a lot of enthusiasm for the game because, hey, it looks cool, you know.

1542
01:51:00,000 --> 01:51:04,000
So anyway, yeah, there's sort of a funny dynamic.

1543
01:51:05,000 --> 01:51:11,000
I don't really know the whole, you know, how long it takes for a feature to become just part of the workflow and so on.

1544
01:51:11,000 --> 01:51:15,000
But, you know, and there's also just, yeah, tooling on the side of games developers.

1545
01:51:15,000 --> 01:51:22,000
You know, it's not like, oh, we have a new feature, you know, Unreal Engine, somebody says, or Unity says, hey, we have this new ray tracing feature.

1546
01:51:22,000 --> 01:51:25,000
It's not like developers just turn it on and go, hey, I've got ray tracing.

1547
01:51:26,000 --> 01:51:30,000
And I know there's, you know, a definite lag time with them having to look at the technology.

1548
01:51:30,000 --> 01:51:36,000
For the artists to sort of take advantage of the technology, find out what works, what doesn't work, and so on.

1549
01:51:36,000 --> 01:51:41,000
So it's, you know, it's, and a game can have multiple years before it comes out.

1550
01:51:41,000 --> 01:51:44,000
And sometimes an embarrassing load of years before it comes out.

1551
01:51:44,000 --> 01:51:53,000
But, you know, hopefully in a few years, from beginning to end, their new features get put in, but it takes a lot of photos to pull it out.

1552
01:51:53,000 --> 01:51:55,000
So, yeah, there's definitely a lag.

1553
01:51:55,000 --> 01:51:58,000
But, you know, it's definitely an outwards and outwards.

1554
01:51:58,000 --> 01:52:00,000
I've never seen it go backwards.

1555
01:52:00,000 --> 01:52:03,000
I've never seen people go, well, yeah, I'm done.

1556
01:52:03,000 --> 01:52:05,000
You know, let's just make it cheaper.

1557
01:52:05,000 --> 01:52:07,000
You can always get a cheaper GPU.

1558
01:52:07,000 --> 01:52:09,000
You can always get a crumblier one.

1559
01:52:09,000 --> 01:52:11,000
It's just kind of the nature of the beast.

1560
01:52:11,000 --> 01:52:13,000
Thank you.

1561
01:52:13,000 --> 01:52:19,000
But my opinion is, with the real-time rendering and...

1562
01:52:19,000 --> 01:52:21,000
I can't really hear.

1563
01:52:21,000 --> 01:52:35,000
But my opinion is, regarding the neural rendering, my opinion is, with the real-time ray tracing and the 4K textures come to real.

1564
01:52:35,000 --> 01:52:39,000
So we can have very promising graphics for games now.

1565
01:52:39,000 --> 01:52:48,000
So I think the main bottleneck preventing pursuing super-realistic now is actually the physics.

1566
01:52:48,000 --> 01:52:58,000
So do you think where the physics become the hot topic again in the coming years?

1567
01:52:58,000 --> 01:53:00,000
I would guess.

1568
01:53:00,000 --> 01:53:04,000
I haven't really followed trends carefully as far as simulations and so on.

1569
01:53:04,000 --> 01:53:13,000
But certainly, yeah, just doing more collision detection, it's something that's just part of various libraries now.

1570
01:53:13,000 --> 01:53:16,000
It's various collision detection libraries and so on.

1571
01:53:16,000 --> 01:53:24,000
And how to use CUDA or to use other kinds of GPU processing to speed up that.

1572
01:53:24,000 --> 01:53:32,000
And to allow you to do things like interactively drop a whole bunch of junk in a scene and have it interact properly.

1573
01:53:32,000 --> 01:53:34,000
Yeah, that's certainly a big deal.

1574
01:53:36,000 --> 01:53:40,000
Things like water actually flowing properly, that's a tough one.

1575
01:53:42,000 --> 01:53:45,000
That would be interesting and difficult, I think.

1576
01:53:47,000 --> 01:53:51,000
If you constrain it, you can do some interesting things interactively.

1577
01:53:52,000 --> 01:54:01,000
Yeah, like I said, there's sort of the rendering side, there's the animation side, there's the simulation side,

1578
01:54:01,000 --> 01:54:04,000
and there's probably some other side of it from now on, there are two other things.

1579
01:54:05,000 --> 01:54:10,000
But yeah, there's a lot of interesting things I think you can do with GPUs.

1580
01:54:11,000 --> 01:54:15,000
In part, we've sort of figured out some of the stuff.

1581
01:54:15,000 --> 01:54:19,000
But what I like actually is the fact that when you come up with a new feature,

1582
01:54:19,000 --> 01:54:22,000
and you say, oh, here's a new feature, this is kind of cool.

1583
01:54:22,000 --> 01:54:27,000
Like for the ray tracing cores, they definitely have a purpose in mind.

1584
01:54:27,000 --> 01:54:34,000
But for the deep learning cores, the tensor cores, those are just big.

1585
01:54:34,000 --> 01:54:37,000
Those are just big, and essentially the integer matrix multiplies,

1586
01:54:37,000 --> 01:54:46,000
and that's kind of the core feature that you use to essentially run a neural net.

1587
01:54:46,000 --> 01:54:49,000
So you give it inputs, and then you say, okay, go.

1588
01:54:49,000 --> 01:54:56,000
And basically you're evaluating how much it multiplies to get what the neural net says to do, essentially.

1589
01:54:57,000 --> 01:55:01,000
And so that's one where we didn't have the idea of, oh, that would be good for denoising.

1590
01:55:01,000 --> 01:55:05,000
Which is like, oh, that's just a thing we use all the time for neural nets, so let's just put it in there.

1591
01:55:05,000 --> 01:55:12,000
And so it's great to just sort of see these new technologies where, oh, okay, we're doing denoising.

1592
01:55:12,000 --> 01:55:13,000
That's nice.

1593
01:55:13,000 --> 01:55:21,000
But people are using them for all kinds of crazy neural net stuff that you never predicted, stuff that seems unlikely to work.

1594
01:55:21,000 --> 01:55:23,000
But like, wow, really? That kind of works.

1595
01:55:23,000 --> 01:55:30,000
Like the one that I saw just the past week or two, is this one where text to video.

1596
01:55:30,000 --> 01:55:34,000
I want to see a dog flying through a jungle or whatever.

1597
01:55:34,000 --> 01:55:41,000
It'll attempt to actually make a realistic little film of a dog flying through a jungle or whatever.

1598
01:55:41,000 --> 01:55:46,000
It's really in baby steps right now, but it's just interesting to see.

1599
01:55:46,000 --> 01:55:49,000
It's sort of a funny thing.

1600
01:55:49,000 --> 01:55:52,000
People sort of joke about, well, yeah, at some point we'll just have deep learning,

1601
01:55:53,000 --> 01:55:59,000
where we'll just describe the scene and it'll just appear that way.

1602
01:55:59,000 --> 01:56:04,000
I'm not laughing as much as I used to about that.

1603
01:56:04,000 --> 01:56:14,000
It's sort of like, gee, how much can we shove into these neural nets as far as geometry and ornamentation and so on.

1604
01:56:15,000 --> 01:56:24,000
And try to make them much cheaper to have a very minimal description of something that's actually quite elaborate when you render it.

1605
01:56:24,000 --> 01:56:26,000
So anyway, I don't know.

1606
01:56:26,000 --> 01:56:28,000
There's a lot of fascinating stuff going on.

1607
01:56:28,000 --> 01:56:32,000
So I guess we'll see is the answer.

1608
01:56:32,000 --> 01:56:34,000
Thank you.

1609
01:56:44,000 --> 01:56:56,000
I saw a hand sticking up, but I don't want to hold you guys forever.

1610
01:56:56,000 --> 01:56:58,000
I really appreciate you all listening.

1611
01:56:58,000 --> 01:57:00,000
Hello.

1612
01:57:00,000 --> 01:57:02,000
Oh, my God.

1613
01:57:03,000 --> 01:57:06,000
But, yeah, I'll just say, give me questions.

1614
01:57:06,000 --> 01:57:09,000
I appreciate what you're doing.

1615
01:57:09,000 --> 01:57:12,000
I'll just be right on.

1616
01:57:12,000 --> 01:57:14,000
I don't mind you not hearing it.

1617
01:57:14,000 --> 01:57:16,000
It's perfectly fine.

1618
01:57:16,000 --> 01:57:18,000
Thank you for your time.

1619
01:57:18,000 --> 01:57:20,000
I appreciate you listening to all that stuff.

1620
01:57:20,000 --> 01:57:22,000
I'm focused on the discussion.

1621
01:57:22,000 --> 01:57:23,000
OK.

1622
01:57:23,000 --> 01:57:25,000
Hello.

1623
01:57:25,000 --> 01:57:27,000
Hi, I'm David.

1624
01:57:28,000 --> 01:57:32,000
I'll preface this question by saying that the answer is probably I don't know.

1625
01:57:32,000 --> 01:57:47,000
But you talked about different other ways that path tracing can be used, like modeling sound or collisions or getting some poor architect fired for designing a bad skyscraper.

1626
01:57:48,000 --> 01:57:58,000
I was wondering if you know any work that's done where ray tracing and path tracing is used to model radar waves.

1627
01:57:58,000 --> 01:58:04,000
I'm sure it does.

1628
01:58:04,000 --> 01:58:14,000
I'm betting if you Google ray trace radar right now, you'll find a few thousand things, no doubt.

1629
01:58:15,000 --> 01:58:30,000
Just because, like I say, if it's something that you have something where you're trying to go from point to point and either determine between these two points, is there anything or I want to look in this direction and see something.

1630
01:58:30,000 --> 01:58:34,000
If that's used at all, then go for it.

1631
01:58:35,000 --> 01:58:45,000
So I'm looking here, you know, just Google a realistic radar ray tracing simulator for, you know, for the radar basically.

1632
01:58:45,000 --> 01:58:48,000
For large MIMO arrays.

1633
01:58:48,000 --> 01:58:52,000
I have no idea what a MIMO array is in automotive environments.

1634
01:58:52,000 --> 01:58:56,000
I'm assuming that's for self-driving cars or something, but I don't really know.

1635
01:58:56,000 --> 01:59:00,000
Yeah, there are, you know, people figure out ways.

1636
01:59:00,000 --> 01:59:13,000
What's interesting is that, you know, on one level, photons, if you think about them, yeah, sure, they're going straight and so on, you know, for the most part, but there is also this whole problem with diffraction, you know, especially with sound and so on going around corners and so on.

1637
01:59:13,000 --> 01:59:22,000
So, but there's a lot of work on well how can we simulate diffraction and often it comes down to shoot more rays, you know, so.

1638
01:59:22,000 --> 01:59:30,000
So really the ray is just a tool, it's not meant, you know, it's not like well if it's not going point to point, then I can't use rays. It's more just, this is just a way of sampling.

1639
01:59:30,000 --> 01:59:40,000
It's just a way of sort of saying, you know, what's going on between these two points, or what's going on in this volume of space and what's, you know, going on from this point to this area or whatever.

1640
01:59:40,000 --> 01:59:51,000
One way that you can do that is shoot lots of rays. So, so I will always guess that the answer is yes. Yeah, so Googling right there's 1.4 million results.

1641
01:59:51,000 --> 01:59:56,000
So, yeah, I'll say yes. Ray tracing and radar get along.

1642
01:59:56,000 --> 02:00:02,000
All right. Thank you.

1643
02:00:02,000 --> 02:00:11,000
Just to add to that, I think in addition to what you said very generally about anything that is point to point, you can do it with ray tracing.

1644
02:00:11,000 --> 02:00:23,000
In specific case of radar, I think it goes the opposite way as well when you're trying to design stealth hardware that you don't want things to bounce and you don't want that radiation to be coming out.

1645
02:00:23,000 --> 02:00:29,000
So you can do, you can use ray tracing to find black objects essentially.

1646
02:00:29,000 --> 02:00:34,000
So it goes the other way.

1647
02:00:34,000 --> 02:00:37,000
Any other questions?

1648
02:00:37,000 --> 02:00:43,000
I had a few, but I'll let the students go first.

1649
02:00:43,000 --> 02:00:47,000
Let me pick mine out.

1650
02:00:48,000 --> 02:00:57,000
So, Eric, you spoke about Dream Fusion, kind of reminded me of DALI for images, of course, where text gets converted to images.

1651
02:00:57,000 --> 02:01:07,000
Do you think we'll get to a point, and I know there's a lot of discussion around metaverse for this, is about how easy it becomes to generate 3D models using AI.

1652
02:01:07,000 --> 02:01:15,000
Do you think it'll be as simple as text to 3D or do you think there'll be some level of artistry involved?

1653
02:01:15,000 --> 02:01:22,000
Yeah, let's see, I know, well, the text to 3D, I know, that's sort of a hot topic right now, right?

1654
02:01:22,000 --> 02:01:31,000
Are all artists going to be out of business, you know, because hey, gee, I can just, you know, say what I want and I get some kind of funky image.

1655
02:01:31,000 --> 02:01:43,000
Yeah, it's, you know, it's interesting. Yeah, like the Dream Fusion thing was, I found just fascinating, like, oh, okay, wow, someone's really going for it and, you know, seeing if they could get something reasonable coming out of it.

1656
02:01:43,000 --> 02:01:51,000
But, let's see, I just want to see if I could find the link real quick.

1657
02:01:51,000 --> 02:02:01,000
Yeah, but, yeah, no, the Dream Fusion site's definitely worth looking at.

1658
02:02:02,000 --> 02:02:29,000
That they, you know, they're basically, their method is just, you know, baby steps kind of a method, but it's interesting to, like, see, you know, if you actually go to that site, there's things like, you know, here, let's share screen again, just because it's kind of fun to look at.

1659
02:02:29,000 --> 02:02:37,000
Yeah, so they just have this thing where it's like, okay, you know, let's start with this photo of a squirrel, but you can pick your variant of the squirrel.

1660
02:02:37,000 --> 02:02:43,000
I think these are all, possibly all canned, but anyway, like, you know, so he has this little wooden carving of a squirrel.

1661
02:02:43,000 --> 02:02:50,000
All I wanted to have it wearing a kimono, you know, now I have this model with it wearing a kimono or wearing an elegant ball gown.

1662
02:02:51,000 --> 02:03:01,000
And at the same time, I want to have it, you know, waving a sword around, or I want to have it, you know, on a pottery wheel or whatever, where they just, you know, you just change the, you know, your attributes.

1663
02:03:01,000 --> 02:03:09,000
And these things I think in real life, I think they've just blown through and made all these objects and then made little films of them so you can do every permutation.

1664
02:03:09,000 --> 02:03:11,000
It takes, I think, a few hours.

1665
02:03:12,000 --> 02:03:20,000
Although one of the people who worked on the paper is actually an intern at NVIDIA right now, I believe.

1666
02:03:20,000 --> 02:03:38,000
But anyway, so yeah, so, you know, they're getting these kind of cool models out of, you know, this sort of, well, I'll just do a text thing, and I'll get these sort of 2D images, and then I'll have it kind of try to figure out what the 3D NERF model is from those 2D images.

1667
02:03:39,000 --> 02:03:45,000
It's pretty interesting, you know, I don't know, you know, the question is really, you know, how much control do you have over that?

1668
02:03:45,000 --> 02:03:47,000
You know, it all depends on your training set, right?

1669
02:03:47,000 --> 02:03:56,000
Like, if you, you know, if you don't have, like, yeah, there's a lot of questions as far as, you know, well, okay, I have this model.

1670
02:03:56,000 --> 02:04:01,000
Well, that doesn't tell me anything about how to rig it, how to, you know, animate it, how to do anything with it.

1671
02:04:01,000 --> 02:04:09,000
You know, there's tons of other stuff that's not done by this, but it's still nonetheless a very interesting, you know, sort of use of deep learning.

1672
02:04:09,000 --> 02:04:12,000
Yeah, you know, I'm not sure how far I can go.

1673
02:04:12,000 --> 02:04:29,000
I think, I mean, it's probably, you know, we'll hit limits, and, you know, we'll, you know, there's just, it's hard to imagine sort of like, I don't know, if you play with some of these, you know, stable diffusion systems and so on, after a while, it's like, oh, things kind of fall into certain categories.

1674
02:04:29,000 --> 02:04:31,000
You know, you can pick up artistic styles and so on.

1675
02:04:31,000 --> 02:04:35,000
But there's sort of a sameness to them after a certain point.

1676
02:04:35,000 --> 02:04:44,000
And here, like, I think they're doing like a 64 by 64 by 64 sort of voxel thing and rebuilding images, you know, rebuilding surfaces at that resolution.

1677
02:04:44,000 --> 02:04:48,000
So they're not super high res kind of stuff, as I recall.

1678
02:04:48,000 --> 02:04:53,000
Anyway, so I don't know, is the sort of, you know, kind of answer.

1679
02:04:53,000 --> 02:04:56,000
But yeah, that was interesting.

1680
02:04:56,000 --> 02:04:57,000
Oops.

1681
02:04:57,000 --> 02:04:58,000
Oh, I never did share.

1682
02:04:58,000 --> 02:05:00,000
Sorry. Yeah, so this is, you know, this is sort of it.

1683
02:05:00,000 --> 02:05:05,000
I was clicking through all these things talking and you're all quietly saying what the heck is he talking about.

1684
02:05:05,000 --> 02:05:08,000
Now I actually see what I'm sharing.

1685
02:05:08,000 --> 02:05:16,000
You know, so you can just pick these various things, you know, a squirrel, wearing a purple hoodie, chopping vegetables, you know, so there's a model that does that.

1686
02:05:16,000 --> 02:05:23,000
It's all just based on deploying that images and, you know, making that into a 2D diffusion system.

1687
02:05:23,000 --> 02:05:26,000
So there's no 3D models underneath the hood.

1688
02:05:26,000 --> 02:05:34,000
It's all just sort of 2D and sort of, you know, interpolating a 3D model from that.

1689
02:05:34,000 --> 02:05:36,000
Thanks, Eric.

1690
02:05:36,000 --> 02:05:41,000
My next question was, I think real time rendering edition four came out a few years ago.

1691
02:05:41,000 --> 02:05:46,000
Do you think we'll see an addendum that talks more to the machine learning side of things?

1692
02:05:46,000 --> 02:05:50,000
Or do you think we'll see that in edition five at some point?

1693
02:05:50,000 --> 02:05:53,000
I don't plan an addendum personally.

1694
02:05:53,000 --> 02:05:59,000
Yeah, the Thomas and I and the other authors, you know, we liked, you know, we like sharing.

1695
02:05:59,000 --> 02:06:04,000
You know, we definitely like going, OK, here's the book, you know, that here's all the stuff we didn't know.

1696
02:06:05,000 --> 02:06:18,000
You know, here's the book we wish we had when we started out to try to say here, you know, here's just the techniques, you know, try to explain them simply and point to lots of references and let you go figure stuff out.

1697
02:06:18,000 --> 02:06:22,000
But, man, that takes a lot of work.

1698
02:06:22,000 --> 02:06:26,000
You know, it's, yeah, it's just a ton of labor.

1699
02:06:26,000 --> 02:06:33,000
And, and also the books sort of at the cracking point, like it's larger than it can really fit in a single volume.

1700
02:06:33,000 --> 02:06:41,000
And you kind of like, you know, it's hard to like kill your darlings or, you know, that's the famous phrase of like, you know, you do all this work on something in a novel or a film or something.

1701
02:06:41,000 --> 02:06:43,000
And sometimes you just have to cut it out.

1702
02:06:43,000 --> 02:06:45,000
And if you go at, that's a nice piece.

1703
02:06:45,000 --> 02:06:48,000
But, you know, we just got to cut that scene or we're going to cut that character or whatever.

1704
02:06:48,000 --> 02:06:52,000
And it's difficult to say, well, what do you, what do you, you know, abandon real time rendering?

1705
02:06:52,000 --> 02:06:54,000
Should I throw away texture mapping?

1706
02:06:54,000 --> 02:06:55,000
No, I don't think so.

1707
02:06:55,000 --> 02:07:00,000
You know, so, so there's sort of too many topics and too many interesting things going on.

1708
02:07:00,000 --> 02:07:08,000
But also, it's just a matter of, you know, each, each edition has gotten a number of larger number of years between each edition.

1709
02:07:08,000 --> 02:07:11,000
Like the first edition, we felt like, well, it's about two thirds complete.

1710
02:07:11,000 --> 02:07:13,000
The second edition, we felt like, oh, good.

1711
02:07:13,000 --> 02:07:15,000
We kind of covered all the things we wanted to cover.

1712
02:07:15,000 --> 02:07:18,000
You know, we've seen some kind of coverage.

1713
02:07:18,000 --> 02:07:20,000
The third edition, we're like, oh, my gosh, a lot's happened.

1714
02:07:20,000 --> 02:07:22,000
You know, there's all this programmable stuff going on.

1715
02:07:22,000 --> 02:07:24,000
Okay, we've got to talk about all these new techniques.

1716
02:07:24,000 --> 02:07:27,000
The fourth, you know, yet more stuff we've got to talk about.

1717
02:07:27,000 --> 02:07:34,000
And each edition became, like, I think it was, you know, two years between the first two, maybe, you know, five years between the next.

1718
02:07:34,000 --> 02:07:37,000
And then, like, about ten years between the last two.

1719
02:07:37,000 --> 02:07:41,000
And, you know, it's like, okay, that means maybe 20 years.

1720
02:07:41,000 --> 02:07:43,000
Because it's just a ton of work.

1721
02:07:43,000 --> 02:07:48,000
You know, it's hard to, like, you know, keep a, you know, sort of go over the whole book.

1722
02:07:48,000 --> 02:07:52,000
The difference between the third and the fourth edition, I think, I calculated by doing diffs.

1723
02:07:52,000 --> 02:07:54,000
And it's, like, about 40% different.

1724
02:07:54,000 --> 02:07:58,000
You know, that's how much of the text actually changed between the two editions.

1725
02:07:58,000 --> 02:08:10,000
So it's just like, oh, my gosh, that's a treadmill that really is sort of a joke of, like, when we'll do the next edition is when we forgot how much pain we went through doing the previous edition.

1726
02:08:10,000 --> 02:08:13,000
So I don't think any of us has forgotten the pain yet.

1727
02:08:13,000 --> 02:08:16,000
So it's going to be a while, I think.

1728
02:08:16,000 --> 02:08:17,000
So here's your chance.

1729
02:08:17,000 --> 02:08:21,000
If you want to write a new, you know, a new book, a real-time rendering, go for it.

1730
02:08:21,000 --> 02:08:23,000
I'll give you my full support.

1731
02:08:23,000 --> 02:08:26,000
Eric's putting out a call for authors.

1732
02:08:26,000 --> 02:08:28,000
So, you know, please, please respond.

1733
02:08:28,000 --> 02:08:34,000
Eric, my...

1734
02:08:34,000 --> 02:08:37,000
I think people are just going to keep learning to think that you just erased the whole text.

1735
02:08:37,000 --> 02:08:38,000
That would be good.

1736
02:08:38,000 --> 02:08:39,000
Yeah.

1737
02:08:39,000 --> 02:08:42,000
Only 10% of the text would probably be total wrong.

1738
02:08:43,000 --> 02:08:48,000
But, you know, other than that, we'll do that.

1739
02:08:48,000 --> 02:09:05,000
Eric, my last question for today is if you're looking for contributions to MacUSD, if that's something the students should look to contribute to, like in their final projects, or are there other hobby projects you want to give a shout out to that would be good for the students to look at?

1740
02:09:05,000 --> 02:09:09,000
Yeah, MacUSD, that one's more just, I would say that's really minor.

1741
02:09:09,000 --> 02:09:18,000
Like that's one that's sort of, you know, it's sort of bread and butter rendering stuff that's not...

1742
02:09:18,000 --> 02:09:21,000
I don't really think it's a great final project in some ways.

1743
02:09:21,000 --> 02:09:24,000
But maybe, I don't know.

1744
02:09:24,000 --> 02:09:32,000
You know, you might find something in the USD space that's like, oh, okay, well, you know, USD view works, but it's really simple.

1745
02:09:32,000 --> 02:09:34,000
Maybe I'll add something to USD view.

1746
02:09:34,000 --> 02:09:36,000
I don't know.

1747
02:09:36,000 --> 02:09:41,000
The only reason I mentioned MacUSD is I just was thinking, you know, what have I contributed to the community lately?

1748
02:09:41,000 --> 02:09:44,000
And I'm like, oh, yeah, I did this, you know, three weeks ago.

1749
02:09:44,000 --> 02:09:47,000
So sure, I'll pop that on the screen.

1750
02:09:47,000 --> 02:09:48,000
Yeah, I don't know.

1751
02:09:48,000 --> 02:09:51,000
I mean, there's, there really is just a ton out there.

1752
02:09:51,000 --> 02:10:04,000
It's, you know, I don't, unfortunately, I'm not sort of set up that I go, oh, yeah, what, you know, what project would I give somebody like you guys, you know, to work on?

1753
02:10:04,000 --> 02:10:09,000
Yeah, I'm sure I'll reach out to you before the final project starts to give the students ideas.

1754
02:10:09,000 --> 02:10:12,000
So I can pick your brain then again as well.

1755
02:10:12,000 --> 02:10:13,000
Yeah, yeah.

1756
02:10:13,000 --> 02:10:14,000
I'm trying to think about that.

1757
02:10:14,000 --> 02:10:22,000
Maybe I'll put a little call for ideas slide around here and see if anybody has any sort of, you know, not big enough for an intern.

1758
02:10:22,000 --> 02:10:25,000
It's, you know, hired by a first semester kind of thing.

1759
02:10:25,000 --> 02:10:28,000
That's sort of one level.

1760
02:10:28,000 --> 02:10:29,000
Yeah.

1761
02:10:30,000 --> 02:10:33,000
Like NIC USB is really, it's not a ton of work.

1762
02:10:33,000 --> 02:10:43,000
It's more just, you know, it would be like, okay, I'm going to learn the USB material description, and I'm going to see what I can do to, you know, test it.

1763
02:10:43,000 --> 02:10:46,000
And so that's, you know, that's, that's all that really is.

1764
02:10:46,000 --> 02:10:47,000
It's nothing, nothing deep there.

1765
02:10:47,000 --> 02:10:50,000
It's more just saying, hey, you know, it's good to contribute.

1766
02:10:50,000 --> 02:10:51,000
But it is nice.

1767
02:10:51,000 --> 02:10:58,000
On the other hand, if you had something where you were like, I'll take a week and just try to see if I can, you know, I see nobody has tested this feature.

1768
02:10:58,000 --> 02:11:04,000
Well, I'm going to go learn about that feature, test it, and make a little, you know, a little simple model.

1769
02:11:04,000 --> 02:11:05,000
And that's all it is.

1770
02:11:05,000 --> 02:11:06,000
There's no programming.

1771
02:11:06,000 --> 02:11:16,000
It's just making a model and then trying it on USD view and saying, okay, oh, that worked or that didn't work or trying it on a few viewers and saying, hey, this is one, you know, you guys might want to add to your working group assets.

1772
02:11:16,000 --> 02:11:30,000
You know, that's pretty doable and makes a huge difference, frankly, because there's a lot sort of writing on USD, but there's not as much as I would like with, you know, sort of unit tests or models that are in that format.

1773
02:11:30,000 --> 02:11:32,000
But anyway.

1774
02:11:32,000 --> 02:11:40,000
Yeah, I think a lot of the standards organizations are trying to change that and get USD to build more foundations there.

1775
02:11:40,000 --> 02:11:43,000
So thank you once again for sharing your time.

1776
02:11:43,000 --> 02:11:46,000
It's over two hours, so really appreciate it.

1777
02:11:46,000 --> 02:11:51,000
Students, if you want to wave hi to Eric, you can stand up and look at the camera behind.

1778
02:11:51,000 --> 02:12:00,000
But otherwise, thank you so much once again.

1779
02:12:00,000 --> 02:12:02,000
I'm sure the students appreciate it.

1780
02:12:02,000 --> 02:12:05,000
And we will see you for final projects and other things.

1781
02:12:05,000 --> 02:12:06,000
I'll be sending out those invites.

1782
02:12:06,000 --> 02:12:10,000
So, you know, always appreciate the advice you share with the students.

1783
02:12:10,000 --> 02:12:12,000
Yeah, I look forward to what you guys come up with.

1784
02:12:12,000 --> 02:12:20,000
Honestly, year after year, you guys have done above and beyond on some of the projects.

1785
02:12:20,000 --> 02:12:23,000
I would want to take that on.

1786
02:12:23,000 --> 02:12:24,000
That looks hard.

1787
02:12:24,000 --> 02:12:26,000
So, yeah, it's very impressive what you guys are up to.

1788
02:12:26,000 --> 02:12:28,000
So, yeah, keep on doing it.

1789
02:12:28,000 --> 02:12:29,000
All right.

1790
02:12:29,000 --> 02:12:30,000
Thanks, Eric.

1791
02:12:30,000 --> 02:12:32,000
Have a good night and see you next time.

1792
02:12:32,000 --> 02:12:33,000
Bye.

1793
02:12:33,000 --> 02:12:34,000
See you.

1794
02:12:34,000 --> 02:12:35,000
Bye.

1795
02:12:35,000 --> 02:12:36,000
Bye.

1796
02:12:36,000 --> 02:12:37,000
Bye.

1797
02:12:37,000 --> 02:12:37,000


1798
02:13:05,000 --> 02:13:08,000
Bye.

1799
02:13:35,000 --> 02:13:38,000
Bye.

1800
02:14:05,000 --> 02:14:08,000
Bye.

1801
02:14:35,000 --> 02:14:38,000
Bye.

1802
02:15:05,000 --> 02:15:08,000
Bye.

1803
02:15:35,000 --> 02:15:38,000
Bye.

1804
02:16:05,000 --> 02:16:08,000
Bye.

1805
02:16:35,000 --> 02:16:38,000
Bye.

1806
02:17:05,000 --> 02:17:08,000
Bye.

1807
02:17:35,000 --> 02:17:38,000
Bye.

1808
02:18:05,000 --> 02:18:08,000
Bye.

1809
02:18:35,000 --> 02:18:38,000
Bye.

1810
02:19:05,000 --> 02:19:08,000
Bye.

1811
02:19:35,000 --> 02:19:38,000
Bye.

1812
02:20:05,000 --> 02:20:08,000
Bye.

1813
02:20:35,000 --> 02:20:38,000
Bye.

1814
02:21:05,000 --> 02:21:08,000
Bye.

1815
02:21:35,000 --> 02:21:38,000
Bye.

1816
02:22:05,000 --> 02:22:08,000
Bye.

1817
02:22:35,000 --> 02:22:38,000
Bye.

1818
02:23:05,000 --> 02:23:08,000
Bye.

1819
02:23:35,000 --> 02:23:38,000
Bye.

1820
02:24:05,000 --> 02:24:08,000
Bye.

1821
02:24:35,000 --> 02:24:38,000
Bye.

1822
02:25:05,000 --> 02:25:08,000
Bye.

1823
02:25:35,000 --> 02:25:38,000
Bye.

1824
02:26:05,000 --> 02:26:08,000
Bye.

1825
02:26:35,000 --> 02:26:38,000
Bye.

1826
02:27:05,000 --> 02:27:08,000
Bye.

1827
02:27:35,000 --> 02:27:38,000
Bye.

1828
02:28:05,000 --> 02:28:08,000
Bye.

1829
02:28:35,000 --> 02:28:38,000
Bye.

1830
02:29:05,000 --> 02:29:08,000
Bye.

1831
02:29:35,000 --> 02:29:38,000
Bye.

1832
02:30:05,000 --> 02:30:08,000
Bye.

1833
02:30:35,000 --> 02:30:38,000
Bye.

1834
02:31:05,000 --> 02:31:08,000
Bye.

1835
02:31:35,000 --> 02:31:38,000
Bye.

1836
02:32:05,000 --> 02:32:08,000
Bye.

1837
02:32:35,000 --> 02:32:38,000
Bye.

1838
02:33:05,000 --> 02:33:08,000
Bye.

1839
02:33:35,000 --> 02:33:38,000
Bye.

1840
02:34:05,000 --> 02:34:08,000
Bye.

1841
02:34:35,000 --> 02:34:38,000
Bye.

1842
02:35:05,000 --> 02:35:08,000
Bye.

1843
02:35:35,000 --> 02:35:38,000
Bye.

1844
02:36:05,000 --> 02:36:08,000
Bye.

1845
02:36:35,000 --> 02:36:38,000
Bye.

1846
02:37:05,000 --> 02:37:08,000
Bye.

1847
02:37:35,000 --> 02:37:38,000
Bye.

1848
02:38:05,000 --> 02:38:08,000
Bye.

1849
02:38:35,000 --> 02:38:38,000
Bye.

1850
02:39:05,000 --> 02:39:08,000
Bye.

1851
02:39:35,000 --> 02:39:38,000
Bye.

1852
02:40:05,000 --> 02:40:08,000
Bye.

1853
02:40:35,000 --> 02:40:38,000
Bye.

1854
02:41:05,000 --> 02:41:08,000
Bye.

1855
02:41:35,000 --> 02:41:38,000
Bye.

1856
02:42:05,000 --> 02:42:08,000
Bye.

1857
02:42:35,000 --> 02:42:38,000
Bye.

1858
02:43:05,000 --> 02:43:08,000
Bye.

1859
02:43:35,000 --> 02:43:38,000
Bye.

1860
02:44:05,000 --> 02:44:08,000
Bye.

1861
02:44:35,000 --> 02:44:38,000
Bye.

1862
02:45:05,000 --> 02:45:08,000
Bye.

1863
02:45:35,000 --> 02:45:38,000
Bye.

1864
02:46:05,000 --> 02:46:08,000
Bye.

1865
02:46:35,000 --> 02:46:38,000
Bye.

1866
02:47:05,000 --> 02:47:08,000
Bye.

1867
02:47:35,000 --> 02:47:38,000
Bye.

1868
02:48:05,000 --> 02:48:08,000
Bye.

1869
02:48:35,000 --> 02:48:38,000
Bye.

1870
02:49:05,000 --> 02:49:08,000
Bye.

1871
02:49:35,000 --> 02:49:38,000
Bye.

1872
02:50:05,000 --> 02:50:08,000
Bye.

1873
02:50:35,000 --> 02:50:38,000
Bye.

1874
02:51:05,000 --> 02:51:08,000
Bye.

1875
02:51:35,000 --> 02:51:38,000
Bye.

1876
02:52:05,000 --> 02:52:08,000
Bye.

1877
02:52:35,000 --> 02:52:38,000
Bye.

1878
02:53:05,000 --> 02:53:08,000
Bye.

1879
02:53:35,000 --> 02:53:38,000
Bye.

1880
02:54:05,000 --> 02:54:08,000
Bye.

1881
02:54:35,000 --> 02:54:38,000
Bye.

1882
02:55:05,000 --> 02:55:08,000
Bye.

1883
02:55:35,000 --> 02:55:38,000
Bye.

1884
02:56:05,000 --> 02:56:08,000
Bye.

1885
02:56:35,000 --> 02:56:38,000
Bye.

1886
02:57:05,000 --> 02:57:08,000
Bye.

1887
02:57:35,000 --> 02:57:38,000
Bye.

1888
02:58:05,000 --> 02:58:08,000
Bye.

1889
02:58:35,000 --> 02:58:38,000
Bye.

1890
02:59:05,000 --> 02:59:08,000
Bye.

1891
02:59:35,000 --> 02:59:38,000
Bye.

